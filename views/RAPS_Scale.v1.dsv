<!DOCTYPE html><html ng-app="cds_app">
<head>
<title>{{def.concept.name}}</title>
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<link rel="stylesheet" type="text/css" href="wro/foundation.css"/>
<link rel="stylesheet" type="text/css" href="wro/date-picker.css"/>
<link rel="stylesheet" type="text/css" href="wro/angular.css"></link>
<script type="text/javascript" src="wro/angular.js"></script>
<link rel="text/javascript" type="text/css" href="wro/foundation.js"/>
<script type="text/javascript" src="wro/moment.js"></script>
<script type="text/javascript" src="wro/date-picker.js"></script>
<script type="text/javascript" src="wro/app_lib.js"></script>
<script id="decision-support-view" type="application/json">{
  "dsViewId": "RAPS_Scale.v1",
  "language": {
    "originalLanguage": {
      "terminologyId": {
        "name": "ISO_639-1",
        "value": "ISO_639-1"
      },
      "codeString": "en"
    }
  },
  "decisionSupportViewDefinitions": {
    "en": {
      "name": "RAPS Scale",
      "description": "The risk assessment pressure sore (RAPS) scale"
    }
  },
  "resourceDescription": {
    "originalAuthor": {
      "organisation": "Cambio Healthcare Systems",
      "name": "Oskar Nielsen",
      "date": "2016-08-09"
    },
    "otherContributors": [],
    "details": {
      "en": {
        "keywords": [
          "Senior Alert",
          "Pressure Sore"
        ]
      }
    },
    "otherDetails": {}
  },
  "alertGuideIds": [],
  "executionGuideIds": [
    "RAPS_Scale.v1",
    "RAPS_Scale_Assessment.v1"
  ],
  "alertBindings": {},
  "termDefinitions": {
    "en": {
      "id": "en",
      "terms": {}
    }
  }
}</script>
</head>
<body ng-controller="cds_controller">
<#assign app_help_tag = "def.guides['RAPS_Scale.v1'].concept">
<#assign raps_scale_assessment_entry_cds_data = "data.cds['openEHR-EHR-EVALUATION.raps_scale_assessment.v1']">
<#assign raps_scale_assessment_entry_def = "def.entries['openEHR-EHR-EVALUATION.raps_scale_assessment.v1']">
<#assign risk_group_def = raps_scale_assessment_entry_def + ".elements['/data{at0001}/items{at0002}']">
<#assign risk_group_cds_data = raps_scale_assessment_entry_cds_data + "[0].elements['/data{at0001}/items{at0002}']">
<#assign raps_scale_entry_ehr_data = "data.ehr['openEHR-EHR-OBSERVATION.raps_scale.v1']">
<#assign raps_scale_entry_cds_data = "data.cds['openEHR-EHR-OBSERVATION.raps_scale.v1']">
<#assign raps_scale_entry_def = "def.entries['openEHR-EHR-OBSERVATION.raps_scale.v1']">
<#assign general_condition_def = raps_scale_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0005}']">
<#assign sensory_ability_def = raps_scale_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0035}']">
<#assign total_score_def = raps_scale_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0054}']">
<#assign body_temperature_def = raps_scale_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0044}']">
<#assign fluid_intake_def = raps_scale_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0030}']">
<#assign s_albumin_def = raps_scale_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0049}']">
<#assign the_degree_to_which_the_skin_is_exposed_to_moisture_def = raps_scale_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0020}']">
<#assign event_time_def = raps_scale_entry_def + ".elements['/data/events/time']">
<#assign physical_activity_def = raps_scale_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0010}']">
<#assign friction_and_shear_def = raps_scale_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0040}']">
<#assign mobility_def = raps_scale_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0015}']">
<#assign food_intake_def = raps_scale_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0025}']">
<#assign general_condition_ehr_data = raps_scale_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0005}']">
<#assign sensory_ability_ehr_data = raps_scale_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0035}']">
<#assign total_score_ehr_data = raps_scale_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0054}']">
<#assign body_temperature_ehr_data = raps_scale_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0044}']">
<#assign fluid_intake_ehr_data = raps_scale_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0030}']">
<#assign s_albumin_ehr_data = raps_scale_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0049}']">
<#assign the_degree_to_which_the_skin_is_exposed_to_moisture_ehr_data = raps_scale_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0020}']">
<#assign event_time_ehr_data = raps_scale_entry_ehr_data + "[0].elements['/data/events/time']">
<#assign physical_activity_ehr_data = raps_scale_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0010}']">
<#assign friction_and_shear_ehr_data = raps_scale_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0040}']">
<#assign mobility_ehr_data = raps_scale_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0015}']">
<#assign food_intake_ehr_data = raps_scale_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0025}']">
<#assign general_condition_cds_data = raps_scale_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0005}']">
<#assign sensory_ability_cds_data = raps_scale_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0035}']">
<#assign total_score_cds_data = raps_scale_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0054}']">
<#assign body_temperature_cds_data = raps_scale_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0044}']">
<#assign fluid_intake_cds_data = raps_scale_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0030}']">
<#assign s_albumin_cds_data = raps_scale_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0049}']">
<#assign the_degree_to_which_the_skin_is_exposed_to_moisture_cds_data = raps_scale_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0020}']">
<#assign event_time_cds_data = raps_scale_entry_cds_data + "[0].elements['/data/events/time']">
<#assign physical_activity_cds_data = raps_scale_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0010}']">
<#assign friction_and_shear_cds_data = raps_scale_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0040}']">
<#assign mobility_cds_data = raps_scale_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0015}']">
<#assign food_intake_cds_data = raps_scale_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0025}']">
<script> 
angular.module('cds_app').controller('RAPS_Ctrl', function($scope, $window){
  $scope.$on('json_loaded', function(){
    $scope.${event_time_ehr_data}.value.value = $window.getCurrentDate();
  });
  $scope.findMax = function (element) {
    var array = []
    for  (selection in element.selections) {
      if (selection.hasOwnProperty(element.selections)) {
        array.push(selection);
      }
    }
    return (function() {
      var max = 0;
      var result;
      for (i=0; i<array.length; i++) {
        if (array[i].charAt(0) > max) {
          max = array[i].charAt(0);
          result = array[i];
        }
      }
      return {result: result, itemId: max};
    })(array);
  };
});
</script>
<div ng-show="ready" ng-controller="RAPS_Ctrl">
<div class="header">
  <h1>{{def.concept.name}}</h1>
  <h2>{{def.concept.description}}</h2>
  <div class="help-tip">
	<p>{{${app_help_tag}.description}}</p>
  </div>
</div>
<div class="card">
  <div class="row" title="{{${general_condition_def}.description}}">
      <div class="medium-5 columns">
        <label>{{${general_condition_def}.name}}</label>
      </div>
      <div class="medium-7 columns">
        <select ng-model="${general_condition_ehr_data}.value.selection" ng-options="key as desc for (key, desc) in ${general_condition_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }"></select>
      </div>
  </div>
  <div class="row" title="{{${physical_activity_def}.description}}">
      <div class="medium-5 columns">
        <label>{{${physical_activity_def}.name}}</label>
      </div>
      <div class="medium-7 columns">
        <select ng-model="${physical_activity_ehr_data}.value.selection" ng-options="key as desc for (key, desc) in ${physical_activity_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }"></select>
      </div>
  </div>
  <div class="row" title="{{${mobility_def}.description}}">
      <div class="medium-5 columns">
        <label>{{${mobility_def}.name}}</label>
      </div>
      <div class="medium-7 columns">
        <select ng-model="${mobility_ehr_data}.value.selection" ng-options="key as desc for (key, desc) in ${mobility_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }"></select>
      </div>
  </div>
  <div class="row" title="{{${the_degree_to_which_the_skin_is_exposed_to_moisture_def}.description}}">
      <div class="medium-5 columns">
        <label>{{${the_degree_to_which_the_skin_is_exposed_to_moisture_def}.name}}</label>
      </div>
      <div class="medium-7 columns">
        <select ng-model="${the_degree_to_which_the_skin_is_exposed_to_moisture_ehr_data}.value.selection" ng-options="key as desc for (key, desc) in ${the_degree_to_which_the_skin_is_exposed_to_moisture_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }"></select>
      </div>
  </div>
  <div class="row" title="{{${food_intake_def}.description}}">
      <div class="medium-5 columns">
        <label>{{${food_intake_def}.name}}</label>
      </div>
      <div class="medium-7 columns">
        <select ng-model="${food_intake_ehr_data}.value.selection" ng-options="key as desc for (key, desc) in ${food_intake_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }"></select>
      </div>
  </div>
  <div class="row" title="{{${fluid_intake_def}.description}}">
      <div class="medium-5 columns">
        <label>{{${fluid_intake_def}.name}}</label>
      </div>
      <div class="medium-7 columns">
        <select ng-model="${fluid_intake_ehr_data}.value.selection" ng-options="key as desc for (key, desc) in ${fluid_intake_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }"></select>
      </div>
  </div>
  <div class="row" title="{{${sensory_ability_def}.description}}">
      <div class="medium-5 columns">
        <label>{{${sensory_ability_def}.name}}</label>
      </div>
      <div class="medium-7 columns">
        <select ng-model="${sensory_ability_ehr_data}.value.selection" ng-options="key as desc for (key, desc) in ${sensory_ability_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }"></select>
      </div>
  </div>
  <div class="row" title="{{${friction_and_shear_def}.description}}">
      <div class="medium-5 columns">
        <label>{{${friction_and_shear_def}.name}}</label>
      </div>
      <div class="medium-7 columns">
        <select ng-model="${friction_and_shear_ehr_data}.value.selection" ng-options="key as desc for (key, desc) in ${friction_and_shear_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }"></select>
      </div>
  </div>
  <div class="row" title="{{${body_temperature_def}.description}}">
      <div class="medium-5 columns">
        <label>{{${body_temperature_def}.name}}</label>
      </div>
      <div class="medium-7 columns">
        <select ng-model="${body_temperature_ehr_data}.value.selection" ng-options="key as desc for (key, desc) in ${body_temperature_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }"></select>
      </div>
  </div>
  <div class="row" title="{{${s_albumin_def}.description}}">
      <div class="medium-5 columns">
        <label>{{${s_albumin_def}.name}}</label>
      </div>
      <div class="medium-7 columns">
        <select ng-model="${s_albumin_ehr_data}.value.selection" ng-options="key as desc for (key, desc) in ${s_albumin_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }"></select>
      </div>
  </div>
  <div class="row" title="{{${total_score_def}.description}}" id="score">
    <div class="medium-5 columns">
      <h5><b>{{${total_score_def}.name}}</b></h5>
    </div>
    <div class="medium-7 columns">
      <h5 id="fix">{{${total_score_cds_data}.value.magnitude}}</h5>
    </div>
  </div>
</div>
</div>
<style>
  html, body {
    height:100%;
    width: 100%;
  }
  body {
    font-family: sans-serif;
    font-weight: 300;
    color: #333;
    background: #ecf0f9;
    padding: 1em;
    -webkit-font-smoothing: antialiased;
  }
  h1 {
    font-weight: 600;
    text-align: center;
  }
  h2 {
    text-align: center;
    font-weight: 300;
    font-size: 22px;
    font-style: italic;
  }
  h3 {
    font-weight: 600;
    font-size: 18px;
  }
  .header {
    margin-bottom: 2em;
  }
  .card {
    background-color: #fdfdfd;
    box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
    margin: 10px auto 0 auto;
    padding: 1em;
    width: 50%;
    overflow: hidden;
  }
  select {
    margin: 0 10px 0 10px;
  }
  .help-tip{
      position: absolute;
      top: 18px;
      right: 18px;
      text-align: center;
      background-color: #BCDBEA;
      border-radius: 50%;
      width: 24px;
      height: 24px;
      font-size: 14px;
      line-height: 26px;
      cursor: default;
  }
  .help-tip:before{
      content:'?';
      font-weight: bold;
      color:#fff;
  }
  .help-tip:hover p{
      display:block;
      transform-origin: 100% 0%;
      -webkit-animation: fadeIn 0.3s ease-in-out;
      animation: fadeIn 0.3s ease-in-out;
  }
  .help-tip p{	/* The tooltip */
      display: none;
      text-align: left;
      background-color: #1E2021;
      padding: 20px;
      width: 300px;
      position: absolute;
      border-radius: 3px;
      box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.2);
      right: -4px;
      color: #FFF;
      font-size: 13px;
      line-height: 1.4;
      z-index: 9999;
  }
  .help-tip p:before{ /* The pointer of the tooltip */
      position: absolute;
      content: '';
      width:0;
      height: 0;
      border:6px solid transparent;
      border-bottom-color:#1E2021;
      right:10px;
      top:-12px;
  }
  .help-tip p:after{ /* Prevents the tooltip from being hidden */
      width:100%;
      height:40px;
      content:'';
      position: absolute;
      top:-40px;
      left:0;
  }
  /* CSS animation */
  @-webkit-keyframes fadeIn {
      0% { 
          opacity:0; 
          transform: scale(0.6);
      }

      100% {
          opacity:100%;
          transform: scale(1);
      }
  }
  @keyframes fadeIn {
      0% { opacity:0; }
      100% { opacity:100%; }
  }
  select, label:not(#h-fix) {
    margin-bottom: 10px;
  }
  #score {
    background-color: #e6e6e6;
  }
  #fix {
    margin-left: 10px;
    
  }
</style>
</body></html>