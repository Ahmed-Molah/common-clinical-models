<!DOCTYPE html><html ng-app="cds_app">
<head>
<title>{{def.concept.name}}</title>
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<link rel="stylesheet" type="text/css" href="wro/foundation.css"/>
<link rel="stylesheet" type="text/css" href="wro/date-picker.css"/>
<link rel="stylesheet" type="text/css" href="wro/angular.css"></link>
<script type="text/javascript" src="wro/angular.js"></script>
<link rel="text/javascript" type="text/css" href="wro/foundation.js"/>
<script type="text/javascript" src="wro/moment.js"></script>
<script type="text/javascript" src="wro/date-picker.js"></script>
<script type="text/javascript" src="wro/app_lib.js"></script>
<script id="decision-support-view" type="application/json">{
  "dsViewId": "MNA.v1",
  "language": {
    "originalLanguage": {
      "terminologyId": {
        "name": "ISO_639-1",
        "value": "ISO_639-1"
      },
      "codeString": "en"
    }
  },
  "decisionSupportViewDefinitions": {
    "sv": {
      "name": "Mini Nutritional Assessment",
      "description": "Riskbedömning av undernäring"
    },
    "en": {
      "name": "Mini Nutritional Assessment",
      "description": "Risk assessment tool for malnutrition"
    }
  },
  "resourceDescription": {
    "originalAuthor": {
      "organisation": "Cambio Healthcare Systems",
      "name": "Oskar Nielsen",
      "date": "2016-08-10"
    },
    "otherContributors": [],
    "lifecycleState": "Author draft",
    "details": {
      "sv": {
        "purpose": "Mini Nutritional Assessment (MNA) är ett verktyg för riskbedömning av undernäring. Verktyget är validerat och hjälper upptäcka geriatriska patienter i åldern 65 år och äldre som är undernärda eller löper risk för att utveckla undernäring.",
        "keywords": [
          "Mini Nutritional Assessment",
          "MNA",
          "äldre",
          "malnutrition",
          "nutrition",
          "geriatrik",
          "Senior Alert"
        ],
        "use": "Används på geriatriska patienter i åldern 65 eller över."
      },
      "en": {
        "purpose": "The Mini Nutritional Assessment (MNA) is a risk assessment tool for malnutrition. The tool is validated to help detect geriatric patients age 65 and above who are malnourished or at risk of developing malnutrition.",
        "keywords": [
          "Mini Nutritional Assessment",
          "MNA",
          "elderly",
          "malnutrition",
          "nutrition"
        ],
        "use": "Use on geriatric patients age 65 or above."
      }
    },
    "otherDetails": {
      "references": "Vellas B, Villars H, Abellan G, et al. Overview of the MNA® - Its History and Challenges. J Nutr Health Aging 2006;10:456-465. Rubenstein LZ, Harker JO, Salva A, Guigoz Y, Vellas B. Screening for Undernutrition in Geriatric Practice: Developing the Short-Form Mini Nutritional Assessment (MNA-SF). J. Geront 2001;56A: M366-377. Guigoz Y. The Mini-Nutritional Assessment (MNA®) Review of the Literature - What does it tell us? J Nutr Health Aging 2006; 10:466-487. Kaiser MJ, Bauer JM, Ramsch C, et al.  Validation of the Mini Nutritional Assessment Short-Form (MNA®-SF): A practical tool for identification  of nutritional status.  J Nutr Health Aging 2009; 13:782-788."
    }
  },
  "alertGuideIds": [],
  "executionGuideIds": [
    "MNA.v1",
    "BMI.v1"
  ],
  "alertBindings": {},
  "termDefinitions": {
    "sv": {
      "id": "sv"
    },
    "en": {
      "id": "en",
      "terms": {}
    }
  }
}</script>
</head>
<body ng-controller="cds_controller">
<#assign app_help_tag = "def.guides['MNA.v1'].concept">
<#assign body_mass_index_entry_cds_data = "data.cds['openEHR-EHR-OBSERVATION.body_mass_index.v1']">
<#assign body_mass_index_entry_def = "def.entries['openEHR-EHR-OBSERVATION.body_mass_index.v1']">
<#assign body_mass_index_def = body_mass_index_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0004}']">
<#assign body_mass_index_cds_data = body_mass_index_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0004}']">
<#assign mini_nutritional_assessment_entry_cds_data = "data.cds['openEHR-EHR-OBSERVATION.mini_nutritional_assessment.v1']">
<#assign mini_nutritional_assessment_entry_ehr_data = "data.ehr['openEHR-EHR-OBSERVATION.mini_nutritional_assessment.v1']">
<#assign mini_nutritional_assessment_entry_def = "def.entries['openEHR-EHR-OBSERVATION.mini_nutritional_assessment.v1']">
<#assign mobility_def = mini_nutritional_assessment_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0013}']">
<#assign calf_circumference__cc__def = mini_nutritional_assessment_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0030}']">
<#assign body_mass_index__kg_m2__def = mini_nutritional_assessment_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0024}']">
<#assign has_food_intake_declined_over_the_past_3_months_due_to_loss_of_appetite__digestive_problems__chewing_or_swallowing_difficulties__def = mini_nutritional_assessment_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0004}']">
<#assign has_suffered_psychological_stress_or_acute_disease_in_the_past_3_months__def = mini_nutritional_assessment_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0017}']">
<#assign total_score_def = mini_nutritional_assessment_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0029}']">
<#assign weight_loss_during_the_last_3_months_def = mini_nutritional_assessment_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0008}']">
<#assign neuropsychological_problems_def = mini_nutritional_assessment_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0020}']">
<#assign event_time_def = mini_nutritional_assessment_entry_def + ".elements['/data/events/time']">
<#assign cannot_calculate_bmi_def = mini_nutritional_assessment_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0033}']">
<#assign mobility_cds_data = mini_nutritional_assessment_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0013}']">
<#assign calf_circumference__cc__cds_data = mini_nutritional_assessment_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0030}']">
<#assign body_mass_index__kg_m2__cds_data = mini_nutritional_assessment_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0024}']">
<#assign has_food_intake_declined_over_the_past_3_months_due_to_loss_of_appetite__digestive_problems__chewing_or_swallowing_difficulties__cds_data = mini_nutritional_assessment_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0004}']">
<#assign has_suffered_psychological_stress_or_acute_disease_in_the_past_3_months__cds_data = mini_nutritional_assessment_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0017}']">
<#assign total_score_cds_data = mini_nutritional_assessment_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0029}']">
<#assign weight_loss_during_the_last_3_months_cds_data = mini_nutritional_assessment_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0008}']">
<#assign neuropsychological_problems_cds_data = mini_nutritional_assessment_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0020}']">
<#assign event_time_cds_data = mini_nutritional_assessment_entry_cds_data + "[0].elements['/data/events/time']">
<#assign cannot_calculate_bmi_cds_data = mini_nutritional_assessment_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0033}']">
<#assign mobility_ehr_data = mini_nutritional_assessment_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0013}']">
<#assign calf_circumference__cc__ehr_data = mini_nutritional_assessment_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0030}']">
<#assign body_mass_index__kg_m2__ehr_data = mini_nutritional_assessment_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0024}']">
<#assign has_food_intake_declined_over_the_past_3_months_due_to_loss_of_appetite__digestive_problems__chewing_or_swallowing_difficulties__ehr_data = mini_nutritional_assessment_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0004}']">
<#assign has_suffered_psychological_stress_or_acute_disease_in_the_past_3_months__ehr_data = mini_nutritional_assessment_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0017}']">
<#assign total_score_ehr_data = mini_nutritional_assessment_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0029}']">
<#assign weight_loss_during_the_last_3_months_ehr_data = mini_nutritional_assessment_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0008}']">
<#assign neuropsychological_problems_ehr_data = mini_nutritional_assessment_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0020}']">
<#assign event_time_ehr_data = mini_nutritional_assessment_entry_ehr_data + "[0].elements['/data/events/time']">
<#assign cannot_calculate_bmi_ehr_data = mini_nutritional_assessment_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0033}']">
<#assign height_length_entry_ehr_data = "data.ehr['openEHR-EHR-OBSERVATION.height.v1']">
<#assign height_length_entry_def = "def.entries['openEHR-EHR-OBSERVATION.height.v1']">
<#assign height_length_def = height_length_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0004}']">
<#assign event_time1_def = height_length_entry_def + ".elements['/data/events/time']">
<#assign height_length_ehr_data = height_length_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0004}']">
<#assign event_time1_ehr_data = height_length_entry_ehr_data + "[0].elements['/data/events/time']">
<#assign body_weight_entry_ehr_data = "data.ehr['openEHR-EHR-OBSERVATION.body_weight.v1']">
<#assign body_weight_entry_def = "def.entries['openEHR-EHR-OBSERVATION.body_weight.v1']">
<#assign weight_def = body_weight_entry_def + ".elements['/data{at0002}/events{at0003}/data{at0001}/items{at0004}']">
<#assign event_time2_def = body_weight_entry_def + ".elements['/data/events/time']">
<#assign weight_ehr_data = body_weight_entry_ehr_data + "[0].elements['/data{at0002}/events{at0003}/data{at0001}/items{at0004}']">
<#assign event_time2_ehr_data = body_weight_entry_ehr_data + "[0].elements['/data/events/time']">
<script>
angular.module('cds_app').controller('MNA_Ctrl', function($scope, $window){
  $scope.$on('json_loaded', function(){
    $scope.${event_time_ehr_data}.value.value = new Date().toISOString();
    $scope.${event_time1_ehr_data}.value.value = new Date().toISOString();
    $scope.${event_time2_ehr_data}.value.value = new Date().toISOString();
    $scope.${height_length_ehr_data}.value.units = $scope.${height_length_def}.units[0];
    $scope.${weight_ehr_data}.value.units = $scope.${weight_def}.units[0];
  });
  $scope.updateCC = function () {
    document.getElementById("cbox").checked === true ? $scope.checked = true : $scope.checked = false;
    $scope.execute();
  };
  $scope.$on('executeEnd', function() {
    $scope.firedRules.filter(function(rule) {
      if (rule.gtCode === 'gt0033' || rule.gtCode === 'gt0047' ) {
        $scope.bmi = Math.round($scope.${body_mass_index__kg_m2__cds_data}.value.magnitude);
      }
    });
  });
});
</script>
<div ng-show="ready" ng-controller="MNA_Ctrl">
<div class="row">
<div class="medium-12 column">
  <h1>{{def.concept.name}}</h1>
  <div class="help-tip">
    <p>{{${app_help_tag}.description}}</p>
  </div>
</div>
</div>
<div class="row">
  <div class="medium-12 column">
    <table>
      <thead>
          <tr>
              <th colspan="3">A. {{${has_food_intake_declined_over_the_past_3_months_due_to_loss_of_appetite__digestive_problems__chewing_or_swallowing_difficulties__def}.name}}</th>
          </tr>
      </thead>
      <tbody>
          <tr>
              <td>{{${has_food_intake_declined_over_the_past_3_months_due_to_loss_of_appetite__digestive_problems__chewing_or_swallowing_difficulties__def}.name}}</td>
              <td valign="middle" align="left" colspan="2">
                  <label ng-repeat="(key, desc) in ${has_food_intake_declined_over_the_past_3_months_due_to_loss_of_appetite__digestive_problems__chewing_or_swallowing_difficulties__def}.selections">
                    <input type="radio" value="{{key}}" ng-model="${has_food_intake_declined_over_the_past_3_months_due_to_loss_of_appetite__digestive_problems__chewing_or_swallowing_difficulties__ehr_data}.value.selection" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }" ng-change="execute()" /> {{desc}}</label>
              </td>
          </tr>
      </tbody>

      <thead>
          <tr>
              <th colspan="3">B. {{${weight_loss_during_the_last_3_months_def}.name}}</th>
          </tr>
      </thead>
      <tbody>
          <tr>
              <td>{{${weight_loss_during_the_last_3_months_def}.name}}</td>
              <td valign="middle" align="left" colspan="2">
                  <label ng-repeat="(key, desc) in ${weight_loss_during_the_last_3_months_def}.selections">
                  <input type="radio" value="{{key}}" ng-model="${weight_loss_during_the_last_3_months_ehr_data}.value.selection" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }" ng-change="execute()" /> {{desc}}</label>
              </td>
          </tr>
      </tbody>		

      <thead>
          <tr>
              <th colspan="3">C. {{${mobility_def}.name}}</th>
          </tr>
      </thead>
      <tbody>
          <tr>
              <td>{{${mobility_def}.name}}</td>
              <td valign="middle" align="left" colspan="2">
                  <label ng-repeat="(key, desc) in ${mobility_def}.selections">
                  <input type="radio" value="{{key}}" ng-model="${mobility_ehr_data}.value.selection" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }" ng-change="execute()" /> {{desc}}</label>
              </td>
          </tr>
      </tbody>	

      <thead>
          <tr>
              <th colspan="3">D. {{${has_suffered_psychological_stress_or_acute_disease_in_the_past_3_months__def}.name}}</th>
          </tr>
      </thead>
      <tbody>
          <tr>
              <td>{{${has_suffered_psychological_stress_or_acute_disease_in_the_past_3_months__def}.name}}</td>
              <td valign="middle" align="left" colspan="2">
                  <label ng-repeat="(key, desc) in ${has_suffered_psychological_stress_or_acute_disease_in_the_past_3_months__def}.selections">
                  <input type="radio" value="{{key}}" ng-model="${has_suffered_psychological_stress_or_acute_disease_in_the_past_3_months__ehr_data}.value.selection" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }" ng-change="execute()" /> {{desc}}</label>
              </td>
          </tr>
      </tbody>	

      <thead>
          <tr>
              <th colspan="3">E. {{${neuropsychological_problems_def}.name}}</th>
          </tr>
      </thead>
      <tbody>
          <tr>
              <td>{{${neuropsychological_problems_def}.name}}</td>
              <td valign="middle" align="left" colspan="2">
                  <label ng-repeat="(key, desc) in ${neuropsychological_problems_def}.selections">
                  <input type="radio" value="{{key}}" ng-model="${neuropsychological_problems_ehr_data}.value.selection" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }" ng-change="execute()" /> {{desc}}</label>
              </td>
          </tr>
      </tbody>	

      <thead>
          <tr>
              <th colspan="3">F1. {{${body_mass_index_def}.name}}</th>
          </tr>
      </thead>
      <tbody>
          <tr>
              <td colspan="3" valign="middle">
                  <label><i>{{${cannot_calculate_bmi_def}.name}}</i><input id="cbox" type="checkbox" ng-model="${cannot_calculate_bmi_ehr_data}.value.value" ng-change="updateCC()"></label>
              </td>
          </tr>
          <tr>
              <td ng-class="{'disabled': checked}" valign="middle">{{${height_length_def}.name}} in {{${height_length_def}.units[0]}}</td>
              <td valign="bottom" align="left" colspan="2">
              <input ng-model="${height_length_ehr_data}.value.magnitude" type="number" step='any' ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }" ng-disabled="checked"></input>
              </td>
          </tr>
          <tr>
              <td ng-class="{'disabled': checked}" valign="middle">{{${weight_def}.name}} in {{${weight_def}.units[0]}}</td>
              <td valign="bottom" align="left" colspan="2">
              <input ng-model="${weight_ehr_data}.value.magnitude" type="number" step='any' ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }" ng-disabled="checked"></input>
              </td>
          </tr>
          <tr>
          <td colspan="3" ng-class="{'disabled': checked}" valign="middle"><b>BMI: </b>{{bmi}} {{${body_mass_index__kg_m2__cds_data}.value.units}}</td>
          </tr>
      </tbody>			

      <thead>
          <tr>
              <th ng-class="{'disabled': !checked}" colspan="3">F2. {{${calf_circumference__cc__def}.name}}</th>
          </tr>
      </thead>
      <tbody>
          <tr>
              <td ng-class="{'disabled': !checked}">{{${calf_circumference__cc__def}.name}}</td>
              <td valign="bottom" align="left" colspan="2">
                  <label ng-class="{'disabled': !checked}" ng-repeat="(key, desc) in ${calf_circumference__cc__def}.selections">
                  <input type="radio" value="{{key}}" ng-model="${calf_circumference__cc__ehr_data}.value.selection" ng-disabled="!checked" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }" ng-change="execute()" /> {{desc}}</label>
              </td>
          </tr>
      </tbody>	
    </table>
  </div>
</div>

</div>
</body>
<style>
  html, body {
    height:100%;
    width: 100%;
  }
  body {
    font-family: sans-serif;
    font-weight: 300;
    color: #333;
    background: #ecf0f9;
    padding: 1em;
    -webkit-font-smoothing: antialiased;
  }  
 .help-tip{
      position: absolute;
      top: 18px;
      right: 18px;
      text-align: center;
      background-color: #BCDBEA;
      border-radius: 50%;
      width: 24px;
      height: 24px;
      font-size: 14px;
      line-height: 26px;
      cursor: default;
  }
  .help-tip:before{
      content:'?';
      font-weight: bold;
      color:#fff;
  }
  .help-tip:hover p{
      display:block;
      transform-origin: 100% 0%;
      -webkit-animation: fadeIn 0.3s ease-in-out;
      animation: fadeIn 0.3s ease-in-out;
  }
  .help-tip p{	/* The tooltip */
      display: none;
      text-align: left;
      background-color: #1E2021;
      padding: 20px;
      width: 300px;
      position: absolute;
      border-radius: 3px;
      box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.2);
      right: -4px;
      color: #FFF;
      font-size: 13px;
      line-height: 1.4;
      z-index: 9999;
  }
  .help-tip p:before{ /* The pointer of the tooltip */
      position: absolute;
      content: '';
      width:0;
      height: 0;
      border:6px solid transparent;
      border-bottom-color:#1E2021;
      right:10px;
      top:-12px;
  }
  .help-tip p:after{ /* Prevents the tooltip from being hidden */
      width:100%;
      height:40px;
      content:'';
      position: absolute;
      top:-40px;
      left:0;
  }
  /* CSS animation */
  @-webkit-keyframes fadeIn {
      0% { 
          opacity:0; 
          transform: scale(0.6);
      }

      100% {
          opacity:100%;
          transform: scale(1);
      }
  }
  @keyframes fadeIn {
      0% { opacity:0; }
      100% { opacity:100%; }
  }
  .disabled {
    opacity: 0.5;
  }
  #cbox {
    float: left;
    margin-right: 5px;
  }
  td, td.disabled {
    background-color: white;
  }
  h1 {
    text-align: center;
  }
</style>
</html>