<!DOCTYPE html><html ng-app="cds_app">
<head>
<title>{{def.concept.name}}</title>
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<link rel="stylesheet" type="text/css" href="wro/foundation.css"/>
<link rel="stylesheet" type="text/css" href="wro/date-picker.css"/>
<link rel="stylesheet" type="text/css" href="wro/angular.css"></link>
<script type="text/javascript" src="wro/angular.js"></script>
<link rel="text/javascript" type="text/css" href="wro/foundation.js"/>
<script type="text/javascript" src="wro/moment.js"></script>
<script type="text/javascript" src="wro/date-picker.js"></script>
<script type="text/javascript" src="wro/app_lib.js"></script>
<script id="decision-support-view" type="application/json">{
  "dsViewId": "SOFA.v1",
  "language": {
    "originalLanguage": {
      "terminologyId": {
        "name": "ISO_639-1",
        "value": "ISO_639-1"
      },
      "codeString": "en"
    }
  },
  "decisionSupportViewDefinitions": {
    "sv": {
      "name": "Sequential Organ Failure Assessment",
      "description": "Uppskattning av mortalitet hos patienter som vårdas på intensivvårdsavdelning. "
    },
    "en": {
      "name": "Sequential Organ Failure Assessment",
      "description": "Indicator of mortality and morbidity prognosis among ICU patients."
    }
  },
  "resourceDescription": {
    "originalAuthor": {
      "date": "2017-01-25",
      "name": "Syeeda S Farruque",
      "organisation": "Cambio Healthcare Systems"
    },
    "otherContributors": [
      "Dennis Forslund, Cambio Healthcare Systems"
    ],
    "details": {
      "sv": {
        "purpose": "Att förutsäga mortalitet hos patient som vårdas på intensivvårdsavdelning. Poängen beräknas fortlöpande med 24h-intervall från initial bedömning till utskrivning. Registrering görs med hänsyn till det senaste dygnet.",
        "keywords": [
          "SOFA",
          "ICU",
          "Sequential organ failure assessment",
          "mortalitet",
          "organsvikt",
          "intensivvård"
        ],
        "use": "Varje individuell parameter poängsätts med 0-4p där 0 indikerar antingen normalvärde eller att aktuellt värde saknas eller av någon anledning ej är tillämpligt. \n\nSystemet har flera möjliga tillämpningar:\n - Parametrarna kan användas för utvärdering av respektive organsystem.\n - Totala poängsumman kan användas för att uppskatta prognos för den specifika dagen\n - Totala summan av de värst drabbade parametrarna kan användas för att utvärdera hela vårdtiden\n\nDe sex parametrarna inkluderar:\n- Respiration\n- Koagulation\n- Lever\n- Neurologi\n- Hjärt-kärl\n- Njure \n\nTotal poäng uppgår till maximalt 24p och tolkas med avseende på mortalitet enligt:\n                                 \n0-6p \u003d \u003c10%\n7-9p \u003d15-20%\n10-12p \u003d 40-50%\n13-14p \u003d 50-60%\n15p \u003d \u003e80%\n15-24p \u003d  \u003e90%\n",
        "misuse": "SOFA är endast en uppskattning och är ej avsedd för att påverka medicinsk handläggning eller utvärdera intervention.",
        "copyright": "© Cambio Healthcare Systems"
      },
      "en": {
        "purpose": "The SOFA helps to predict mortality across 6 organ systems which is calculated every 24 hrs from the initial assessment at admission until the patient is discharged. The worst results of each measured parameter is recorded during the previous 24 hrs.",
        "keywords": [
          "SOFA",
          "ICU",
          "Sequential organ failure assessment",
          "mortality",
          "organ failure"
        ],
        "use": "The individual scores for each of the 6 organ domains range from 0 to 4 (0 usually relating to normal values or N/A where they are not part of the scoring).\n\nEach individual domain score can be used to assess that particular domain\u0027s organ dysfunction\n\nOr, the total sum of scores can be used to assess prognosis on a single ICU day\n\nOr the total sum of the worst scores can be used to evaluate the whole ICU period.\n\nDomains are: \n\nRespiration\nCoagulation\nLiver\nNeurological\nCardiovascular\nRenal\n\nThe SOFA scores ranges from 0 to 24\n\nScore interpretations are according to the MAX SOFA scores:\n\nSOFA score     Mortality\n0-6                   \u003c10%\n7-9                   15-20%\n10-12                40-50%\n13-14                50-60%\n15                      \u003e80%\n15-24                \u003e90%\n",
        "misuse": "The SOFA is not designed to accurately predict mortality (and was initially aimed only to ICU mortality specifically)",
        "copyright": "© Cambio Healthcare Systems"
      }
    },
    "otherDetails": {
      "references": "Ref. 1: Vincent JL, Moreno R, Takala J, et al. The SOFA (Sepsis-related Organ Failure Assessment) score to describe organ dysfunction/failure. On behalf of the Working Group on Sepsis-Related Problems of the European Society of Intensive Care Medicine. In: Vol 22. 1996:707–710.\n\nRef. 2: Vincent JL, de Mendonça A, Cantraine F, et al. Use of the SOFA score to assess the incidence of organ dysfunction/failure in intensive care units: results of a multicenter, prospective study. Working group on \\\"sepsis-related problems\\\" of the European Society of Intensive Care Medicine. Crit Care Med. 1998;26(11):1793–1800.\n\nRef. 3: Kratz A, Ferraro M, Sluss PM, et al: Case records of the Massachusetts General Hospital: laboratory values. N Engl J Med 2004; 351(15):1549-1563."
    }
  },
  "alertGuideIds": [],
  "executionGuideIds": [
    "SOFA.v1"
  ],
  "alertBindings": {},
  "termDefinitions": {
    "sv": {
      "id": "sv",
      "terms": {
        "vt0001": {
          "id": "vt0001",
          "text": "Referenser"
        }
      }
    },
    "en": {
      "id": "en",
      "terms": {
        "vt0001": {
          "id": "vt0001",
          "text": "References"
        }
      }
    }
  }
}</script>
</head>
<body ng-controller="cds_controller">
<#assign app_help_tag = "def.guides['SOFA.v1'].concept">
<#assign references = "def.terms['vt0001']"/>
<#assign full_blood_count_entry_ehr_data = "data.ehr['openEHR-EHR-OBSERVATION.lab_test-full_blood_count.v1']">
<#assign full_blood_count_entry_def = "def.entries['openEHR-EHR-OBSERVATION.lab_test-full_blood_count.v1']">
<#assign platelet_count_def = full_blood_count_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0078.12}']">
<#assign event_time_def = full_blood_count_entry_def + ".elements['/data/events/time']">
<#assign platelet_count_ehr_data = full_blood_count_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0078.12}']">
<#assign event_time_ehr_data = full_blood_count_entry_ehr_data + "[0].elements['/data/events/time']">
<#assign sequential_organ_failure_assessment_entry_cds_data = "data.cds['openEHR-EHR-OBSERVATION.sequential_organ_failure_assessment.v1']">
<#assign sequential_organ_failure_assessment_entry_ehr_data = "data.ehr['openEHR-EHR-OBSERVATION.sequential_organ_failure_assessment.v1']">
<#assign sequential_organ_failure_assessment_entry_def = "def.entries['openEHR-EHR-OBSERVATION.sequential_organ_failure_assessment.v1']">
<#assign carrico_pf_def = sequential_organ_failure_assessment_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0042}']">
<#assign pf_ratio_carrico_index_score_def = sequential_organ_failure_assessment_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0004}']">
<#assign platlets_score_def = sequential_organ_failure_assessment_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0005}']">
<#assign gcs_score_def = sequential_organ_failure_assessment_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0006}']">
<#assign br_score_def = sequential_organ_failure_assessment_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0007}']">
<#assign map_or_admin_of_vasopressors_required_def = sequential_organ_failure_assessment_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0008}']">
<#assign creatinine_or_urine_output_def = sequential_organ_failure_assessment_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0009}']">
<#assign event_time1_def = sequential_organ_failure_assessment_entry_def + ".elements['/data/events/time']">
<#assign total_score_def = sequential_organ_failure_assessment_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0010}']">
<#assign carrico_pf_cds_data = sequential_organ_failure_assessment_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0042}']">
<#assign pf_ratio_carrico_index_score_cds_data = sequential_organ_failure_assessment_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0004}']">
<#assign platlets_score_cds_data = sequential_organ_failure_assessment_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0005}']">
<#assign gcs_score_cds_data = sequential_organ_failure_assessment_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0006}']">
<#assign br_score_cds_data = sequential_organ_failure_assessment_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0007}']">
<#assign map_or_admin_of_vasopressors_required_cds_data = sequential_organ_failure_assessment_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0008}']">
<#assign creatinine_or_urine_output_cds_data = sequential_organ_failure_assessment_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0009}']">
<#assign event_time1_cds_data = sequential_organ_failure_assessment_entry_cds_data + "[0].elements['/data/events/time']">
<#assign total_score_cds_data = sequential_organ_failure_assessment_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0010}']">
<#assign carrico_pf_ehr_data = sequential_organ_failure_assessment_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0042}']">
<#assign pf_ratio_carrico_index_score_ehr_data = sequential_organ_failure_assessment_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0004}']">
<#assign platlets_score_ehr_data = sequential_organ_failure_assessment_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0005}']">
<#assign gcs_score_ehr_data = sequential_organ_failure_assessment_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0006}']">
<#assign br_score_ehr_data = sequential_organ_failure_assessment_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0007}']">
<#assign map_or_admin_of_vasopressors_required_ehr_data = sequential_organ_failure_assessment_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0008}']">
<#assign creatinine_or_urine_output_ehr_data = sequential_organ_failure_assessment_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0009}']">
<#assign event_time1_ehr_data = sequential_organ_failure_assessment_entry_ehr_data + "[0].elements['/data/events/time']">
<#assign total_score_ehr_data = sequential_organ_failure_assessment_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0010}']">
<#assign lab_test_creatinine_entry_ehr_data = "data.ehr['openEHR-EHR-OBSERVATION.lab_test_creatinine.v1']">
<#assign lab_test_creatinine_entry_def = "def.entries['openEHR-EHR-OBSERVATION.lab_test_creatinine.v1']">
<#assign result_def = lab_test_creatinine_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0005}']">
<#assign event_time2_def = lab_test_creatinine_entry_def + ".elements['/data/events/time']">
<#assign result_ehr_data = lab_test_creatinine_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0005}']">
<#assign event_time2_ehr_data = lab_test_creatinine_entry_ehr_data + "[0].elements['/data/events/time']">
<#assign blood_gas_assessment_entry_ehr_data = "data.ehr['openEHR-EHR-OBSERVATION.lab_test-blood_gases.v1']">
<#assign blood_gas_assessment_entry_def = "def.entries['openEHR-EHR-OBSERVATION.lab_test-blood_gases.v1']">
<#assign pao2_def = blood_gas_assessment_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0078.11}']">
<#assign fio2_def = blood_gas_assessment_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0.94}']">
<#assign event_time3_def = blood_gas_assessment_entry_def + ".elements['/data/events/time']">
<#assign pao2_ehr_data = blood_gas_assessment_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0078.11}']">
<#assign fio2_ehr_data = blood_gas_assessment_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0.94}']">
<#assign event_time3_ehr_data = blood_gas_assessment_entry_ehr_data + "[0].elements['/data/events/time']">
<#assign blood_pressure_entry_ehr_data = "data.ehr['openEHR-EHR-OBSERVATION.blood_pressure.v1']">
<#assign blood_pressure_entry_def = "def.entries['openEHR-EHR-OBSERVATION.blood_pressure.v1']">
<#assign mean_arterial_pressure_def = blood_pressure_entry_def + ".elements['/data{at0001}/events{at0006}/data{at0003}/items{at1006}']">
<#assign event_time4_def = blood_pressure_entry_def + ".elements['/data/events/time']">
<#assign mean_arterial_pressure_ehr_data = blood_pressure_entry_ehr_data + "[0].elements['/data{at0001}/events{at0006}/data{at0003}/items{at1006}']">
<#assign event_time4_ehr_data = blood_pressure_entry_ehr_data + "[0].elements['/data/events/time']">
<#assign calculated_urine_output_entry_ehr_data = "data.ehr['openEHR-EHR-OBSERVATION.calculated_urine_output.v1']">
<#assign calculated_urine_output_entry_def = "def.entries['openEHR-EHR-OBSERVATION.calculated_urine_output.v1']">
<#assign total_urine_output_24_hr_def = calculated_urine_output_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0005}']">
<#assign event_time5_def = calculated_urine_output_entry_def + ".elements['/data/events/time']">
<#assign total_urine_output_24_hr_ehr_data = calculated_urine_output_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0005}']">
<#assign event_time5_ehr_data = calculated_urine_output_entry_ehr_data + "[0].elements['/data/events/time']">
<#assign laboratory_test___bilirubin_entry_ehr_data = "data.ehr['openEHR-EHR-OBSERVATION.lab_test-bilirubin.v1']">
<#assign laboratory_test___bilirubin_entry_def = "def.entries['openEHR-EHR-OBSERVATION.lab_test-bilirubin.v1']">
<#assign total_bilirubin_def = laboratory_test___bilirubin_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0091}']">
<#assign event_time6_def = laboratory_test___bilirubin_entry_def + ".elements['/data/events/time']">
<#assign total_bilirubin_ehr_data = laboratory_test___bilirubin_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0091}']">
<#assign event_time6_ehr_data = laboratory_test___bilirubin_entry_ehr_data + "[0].elements['/data/events/time']">
<#assign glasgow_coma_scale_entry_ehr_data = "data.ehr['openEHR-EHR-OBSERVATION.glasgow_coma_scale.v1']">
<#assign glasgow_coma_scale_entry_def = "def.entries['openEHR-EHR-OBSERVATION.glasgow_coma_scale.v1']">
<#assign total_score1_def = glasgow_coma_scale_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0026}']">
<#assign event_time7_def = glasgow_coma_scale_entry_def + ".elements['/data/events/time']">
<#assign total_score1_ehr_data = glasgow_coma_scale_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0026}']">
<#assign event_time7_ehr_data = glasgow_coma_scale_entry_ehr_data + "[0].elements['/data/events/time']">

<script> 
angular.module('cds_app').controller('SOFA_Ctrl', function($scope, $window){
  $scope.$on('json_loaded', function(){
    $scope.${event_time_ehr_data}.value.value = new Date().toISOString();
	$scope.${event_time1_ehr_data}.value.value = new Date().toISOString();
    $scope.${event_time2_ehr_data}.value.value = new Date().toISOString();
    $scope.${event_time3_ehr_data}.value.value = new Date().toISOString();
    $scope.${event_time4_ehr_data}.value.value = new Date().toISOString();
    $scope.${event_time5_ehr_data}.value.value = new Date().toISOString();
	$scope.${event_time6_ehr_data}.value.value = new Date().toISOString();
	$scope.${event_time7_ehr_data}.value.value = new Date().toISOString();
    $scope.${pao2_ehr_data}.value.units = $scope.${pao2_def}.units[1];
    $scope.${fio2_ehr_data}.value.units = $scope.${fio2_def}.units[0];
	$scope.${platelet_count_ehr_data}.value.units = $scope.${platelet_count_def}.units[0];
    $scope.${total_bilirubin_ehr_data}.value.units = $scope.${total_bilirubin_def}.units[1];
	$scope.${gcs_score_ehr_data}.value.selection = $scope.findMin($scope.${gcs_score_def});
	$scope.${map_or_admin_of_vasopressors_required_ehr_data}.value.selection = $scope.findMin($scope.${map_or_admin_of_vasopressors_required_def});
	$scope.${creatinine_or_urine_output_ehr_data}.value.selection = $scope.findMin($scope.${creatinine_or_urine_output_def});
  });
});
</script>

<div ng-show="ready" ng-controller="SOFA_Ctrl">

<div class="header">
  <h1>{{def.concept.name}}</h1>
  <h2>{{def.concept.description}}</h2>
  <div class="help-tip">
	<p>{{${app_help_tag}.description}}</p>
  </div>
</div>

<div class="card">
<div class="row collapse" title="{{${pao2_def}.description}}">
<div class="medium-6 columns">
<label>{{${pao2_def}.name}}</label>
</div>
<div class="medium-4 columns">
        <input ng-model="${pao2_ehr_data}.value.magnitude" type="number" step="any" min="0" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }" />
      </div>
	  <div class="medium-2 columns">
        <select ng-model="${pao2_ehr_data}.value.units" ng-options="unit for unit in ${pao2_def}.units" ng-change="execute()" disabled=""></select>
      </div>
</div>
<div class="row collapse" title="{{${fio2_def}.description}}">
<div class="medium-6 columns">
<label>{{${fio2_def}.name}}</label>
</div>
<div class="medium-4 columns">
        <input ng-model="${fio2_ehr_data}.value.magnitude" type="number" step="any" min="0" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }" />
      </div>
	  <div class="medium-2 columns">
        <select ng-model="${fio2_ehr_data}.value.units" ng-options="unit for unit in ${fio2_def}.units" ng-change="execute()" disabled=""></select>
      </div>
</div>
<div class="row collapse" title="{{${platelet_count_def}.description}}">
<div class="medium-6 columns">
<label>{{${platelet_count_def}.name}}</label>
</div>
<div class="medium-4 columns">
        <input ng-model="${platelet_count_ehr_data}.value.magnitude" type="number" step="any" min="0" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }" />
      </div>
	  <div class="medium-2 columns">
        <select ng-model="${platelet_count_ehr_data}.value.units" ng-options="unit for unit in ${platelet_count_def}.units" ng-change="execute()" disabled=""></select>
      </div>
</div>
<div class="row collapse" title="{{${total_bilirubin_def}.description}}">
<div class="medium-6 columns">
<label>{{${total_bilirubin_def}.name}}</label>
</div>
<div class="medium-4 columns">
        <input ng-model="${total_bilirubin_ehr_data}.value.magnitude" type="number" step="any" min="0" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }" />
      </div>
	  <div class="medium-2 columns">
        <select ng-model="${total_bilirubin_ehr_data}.value.units" ng-options="unit for unit in ${total_bilirubin_def}.units" ng-change="execute()" disabled=""></select>
      </div>
</div>
<div class="row collapse" title="{{${total_score1_def}.description}}">
<div class="medium-6 columns">
<label>{{${total_score1_def}.name}}</label>
</div>
<div class="medium-6 columns">
        <input ng-model="${total_score1_ehr_data}.value.magnitude" type="number" step="any" min="0" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }" />
      </div>
</div>
<div class="row collapse" title="{{${map_or_admin_of_vasopressors_required_def}.description}}">
    <div class="medium-6 columns">
      <label>{{${map_or_admin_of_vasopressors_required_def}.name}}</label>
      </div>
      <label class="medium-6 columns">
        <select ng-model="${map_or_admin_of_vasopressors_required_ehr_data}.value.selection" ng-options="key as (key.charAt(0) + ' - ' + desc) for (key, desc) in ${map_or_admin_of_vasopressors_required_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }">
        </select>
      </label>
    </div>
<div class="row collapse" title="{{${creatinine_or_urine_output_def}.description}}">
    <div class="medium-6 columns">
      <label>{{${creatinine_or_urine_output_def}.name}}</label>
      </div>
      <label class="medium-6 columns">
        <select ng-model="${creatinine_or_urine_output_ehr_data}.value.selection" ng-options="key as (key.charAt(0) + ' - ' + desc) for (key, desc) in ${creatinine_or_urine_output_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }">
        </select>
      </label>
    </div>
<div class="row collapse" title="{{${total_score_def}.description}}" id="displayresult">
  <div class="medium-5 columns">
    <label><b>{{${total_score_def}.name}}: </b></label>
  </div>
  <div class="medium-7 columns" style="text-align: center;">
    <label>{{${total_score_cds_data}.value.magnitude}}</label>
  </div>
</div>
</div>
</div>

<div class="row"><div class="medium-12 columns"></div></div>
<br /><br />
<div class="row collapse" title="{{${references}.text}}" style="font-size: 85%;">
  <div class="medium-11 medium-offset-1 column">
    <label>{{${references}.text}}:</label>
  </div>
</div>
<div class="references1">
  <div class="row collapse">
      <div class="medium-11 medium-offset-1 column">
        <li>
          <i><a href="https://www.ncbi.nlm.nih.gov/pubmed/8844239">Vincent JL, Moreno R, Takala J, et al. The SOFA (Sepsis-related Organ Failure Assessment) score to describe organ dysfunction/failure. On behalf of the Working Group on Sepsis-Related Problems of the European Society of Intensive Care Medicine. In: Vol 22. 1996:707–710.</a></i>
        </li>
      </div>
    </div>
	<div class="row collapse">
      <div class="medium-11 medium-offset-1 column">
        <li>
          <i><a href="https://www.ncbi.nlm.nih.gov/pubmed/9824069">Vincent JL, de Mendonça A, Cantraine F, et al. Use of the SOFA score to assess the incidence of organ dysfunction/failure in intensive care units: results of a multicenter, prospective study. Working group on \"sepsis-related problems\" of the European Society of Intensive Care Medicine. Crit Care Med. 1998;26(11):1793–1800.</a></i>
        </li>
      </div>
    </div>
<div class="row collapse">
      <div class="medium-11 medium-offset-1 column">
        <li>
          <i><a href="https://www.ncbi.nlm.nih.gov/pubmed/15470219">Kratz A, Ferraro M, Sluss PM, et al: Case records of the Massachusetts General Hospital: laboratory values. N Engl J Med 2004; 351(15):1549-1563.</a></i>
        </li>
      </div>
    </div>
  </div>

<style>
  html, body {
    height:100%;
    width: 100%;
  }
  body {
    font-family: sans-serif;
    font-weight: 300;
    color: #333;
    background: #ecf0f9;
    padding: 1em;
    -webkit-font-smoothing: antialiased;
  }
  h1 {
    font-weight: 600;
    text-align: center;
  }
  h2 {
    text-align: center;
    font-weight: 300;
    font-size: 22px;
    font-style: italic;
  }
  .header {
    margin-bottom: 2em;
  }
  .card {
    background-color: #fdfdfd;
    box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
    margin: 10px auto 0 auto;
    padding: 1em;
    width: 50%;
    overflow: hidden;
  }
  .help-tip{
      position: absolute;
      top: 18px;
      right: 18px;
      text-align: center;
      background-color: #BCDBEA;
      border-radius: 50%;
      width: 24px;
      height: 24px;
      font-size: 14px;
      line-height: 26px;
      cursor: default;
  }
  .help-tip:before{
      content:'?';
      font-weight: bold;
      color:#fff;
  }
  .help-tip:hover p{
      display:block;
      transform-origin: 100% 0%;
      -webkit-animation: fadeIn 0.3s ease-in-out;
      animation: fadeIn 0.3s ease-in-out;
  }
  .help-tip p{  /* The tooltip */
      display: none;
      text-align: left;
      background-color: #1E2021;
      padding: 20px;
      width: 300px;
      position: absolute;
      border-radius: 3px;
      box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.2);
      right: -4px;
      color: #FFF;
      font-size: 13px;
      line-height: 1.4;
      z-index: 9999;
  }
  .help-tip p:before{ /* The pointer of the tooltip */
      position: absolute;
      content: '';
      width:0;
      height: 0;
      border:6px solid transparent;
      border-bottom-color:#1E2021;
      right:10px;
      top:-12px;
  }
  .help-tip p:after{ /* Prevents the tooltip from being hidden */
      width:100%;
      height:40px;
      content:'';
      position: absolute;
      top:-40px;
      left:0;
  }
  .references1{
  font-size: 70%;
  }
  /* CSS animation */
  @-webkit-keyframes fadeIn {
      0% { 
          opacity:0; 
          transform: scale(0.6);
      }

      100% {
          opacity:100%;
          transform: scale(1);
      }
  }
  @keyframes fadeIn {
      0% { opacity:0; }
      100% { opacity:100%; }
  }
  #displayresult {
    background-color: #e6e6e6; 
    padding-top: 3px;
    padding-bottom: 3px;
    padding-left: 3px;
	font-size: 90%;
  }
  select, label:not(#h-fix) {
    margin-bottom: 10px;
</style>

</body></html>
