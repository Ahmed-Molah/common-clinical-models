<!DOCTYPE html><html ng-app="cds_app">
<head>
<title>{{def.concept.name}}</title>
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<link rel="stylesheet" type="text/css" href="wro/foundation.css"/>
<link rel="stylesheet" type="text/css" href="wro/date-picker.css"/>
<link rel="stylesheet" type="text/css" href="wro/angular.css"></link>
<script type="text/javascript" src="wro/angular.js"></script>
<link rel="text/javascript" type="text/css" href="wro/foundation.js"/>
<script type="text/javascript" src="wro/moment.js"></script>
<script type="text/javascript" src="wro/date-picker.js"></script>
<script type="text/javascript" src="wro/app_lib.js"></script>
<script id="decision-support-view" type="application/json">{
  "dsViewId": "OCI-R.v1",
  "language": {
    "originalLanguage": {
      "terminologyId": {
        "name": "ISO_639-1",
        "value": "ISO_639-1"
      },
      "codeString": "en"
    }
  },
  "decisionSupportViewDefinitions": {
    "sv": {
      "name": "Obsessive-Compulsive Inventory-revised",
      "description": "Självskattning av symtom relaterade till tvångssyndrom (OCD)"
    },
    "en": {
      "name": "Obsessive-Compulsive Inventory - revised",
      "description": "Self-assessment of symptoms related to Obsessive-Compulsive Disorder"
    }
  },
  "resourceDescription": {
    "originalAuthor": {
      "date": "2016-10-15",
      "name": "Eneimi Allwell-Brown",
      "organisation": "Cambio Healthcare Systems",
      "email": "info@cambio.se"
    },
    "otherContributors": [
      "Dennis Forslund, Cambio Healthcare Systems"
    ],
    "details": {
      "sv": {
        "purpose": "Att utvärdera och registrera en patients självskattade uppfattning kring symtom relaterade till tvångssyndrom (OCD).",
        "keywords": [
          "tvångssyndrom",
          "OCD",
          "alkoholhepatit",
          "OCI-R",
          "DSM",
          "självskattning",
          "Obsessive-Compulsive Inventory-revised"
        ],
        "use": "Använd för att beräkna poäng genererad i enlighet med OCI-R (Obsessive-Compulsive Inventory-revised). Formuläret avser ge en uppskattning kring patientens upplevda symtombesvär under den senaste månaden. \n\nOCI-R består av 18 frågor med svarsalternativ graderade från 0-4 (Likert-skala); 0 \u003d Inte alls, 1 \u003d Lite, 2 \u003d Måttligt, 3 \u003d Mycket, 4 \u003d Extremt mycket.\n\nTotala summan uppgår till maximalt 72 poäng. En genererad summa om 21 poäng eller mer indikerar sannolik förekomst av tvångssyndrom.",
        "misuse": "Endast avsedd för patienter över 12 års ålder. \n\nMELD Score är ej avsedd för att uppskatta mortalitet efter levertransplantation.",
        "copyright": "© Cambio Healthcare Systems"
      },
      "en": {
        "purpose": "To calculate an individual\u0027s self-assessment of symptoms caused by obsessive-compulsive disorder (OCD).",
        "keywords": [
          "obsessive-compulsive disorder",
          "OCD",
          "OCI-R",
          "DSM-IV",
          "ocd self-test",
          "ocd questionnaire"
        ],
        "use": "Use to calculate the revised obsessive-compulsive inventory (OCI-R) score which indicates the level of distress symptoms experienced by an individual during the past month.\n\nThe OCI-R consists of 18 questions with answers scored on a 5-point Likert scale:\n(0 \u003d Not at all, 1 \u003d A little, 2 \u003d Moderately, 3 \u003d A lot, 4 \u003d Extremely). \n\nThe total score is the sum of the scores on all 18 items and gives a minimum score of 0 and maximum score of 72. \nA score of 21 or greater indicates the likely presence of obsessive compulsive disorder (OCD).",
        "misuse": "",
        "copyright": "© Cambio Healthcare Systems"
      }
    },
    "otherDetails": {
      "references": "Ref. 1: Chico-Fernández, M., García-Fuentes, C., Alonso-Fernández, M., Toral-Vázquez, D., Bermejo-Aznarez, S., \u0026 Alted-López, E. (2011). Massive transfusion predictive scores in trauma. Experience of a transfusion registry. Medicina Intensiva (English Edition), 35(9), 546-551.\n\nRef. 2: Subramaniam A, Albert V, Sharma S, et al.: Assessing the efficiency of scoring systems for predicting the probability of massive transfusion in trauma patients. J Haematol Thrombo Dis 2014; 2:1000161"
    }
  },
  "alertGuideIds": [],
  "executionGuideIds": [
    "OCI-R_Assessment.v1",
    "OCI-R_Calculation.v1"
  ],
  "alertBindings": {},
  "termDefinitions": {
    "sv": {
      "id": "sv",
      "terms": {
        "vt0001": {
          "id": "vt0001",
          "text": "Referenser"
        }
      }
    },
    "en": {
      "id": "en",
      "terms": {
        "vt0001": {
          "id": "vt0001",
          "text": "References"
        }
      }
    }
  }
}</script>
</head>
<body ng-controller="cds_controller">
<#assign app_help_tag = "def.guides['OCI-R.v1'].concept">
<#assign references = "def.terms['vt0001']"/>
<#assign obsessive_compulsive_inventory___revised_entry_cds_data = "data.cds['openEHR-EHR-OBSERVATION.obsessive-compulsive_inventory_revised.v1']">
<#assign obsessive_compulsive_inventory___revised_entry_ehr_data = "data.ehr['openEHR-EHR-OBSERVATION.obsessive-compulsive_inventory_revised.v1']">
<#assign obsessive_compulsive_inventory___revised_entry_def = "def.entries['openEHR-EHR-OBSERVATION.obsessive-compulsive_inventory_revised.v1']">
<#assign i_find_it_difficult_to_touch_an_object_when_i_know_it_has_been_touched_by_strangers_or_certain_people_def = obsessive_compulsive_inventory___revised_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0008}']">
<#assign i_feel_that_there_are_good_and_bad_numbers_def = obsessive_compulsive_inventory___revised_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0019}']">
<#assign i_find_it_difficult_to_control_my_own_thoughts_def = obsessive_compulsive_inventory___revised_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0009}']">
<#assign event_time_def = obsessive_compulsive_inventory___revised_entry_def + ".elements['/data/events/time']">
<#assign i_repeatedly_check_doors__windows__drawers__etc_def = obsessive_compulsive_inventory___revised_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0011}']">
<#assign i_get_upset_if_others_change_the_way_i_have_arranged_things_def = obsessive_compulsive_inventory___revised_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0012}']">
<#assign i_feel_i_have_to_repeat_certain_numbers_def = obsessive_compulsive_inventory___revised_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0013}']">
<#assign i_sometimes_have_to_wash_or_clean_myself_simply_because_i_feel_contaminated_def = obsessive_compulsive_inventory___revised_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0014}']">
<#assign i_have_saved_up_so_many_things_that_they_get_in_the_way_def = obsessive_compulsive_inventory___revised_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0004}']">
<#assign i_am_upset_by_unpleasant_thoughts_that_come_into_my_mind_against_my_will_def = obsessive_compulsive_inventory___revised_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0015}']">
<#assign i_check_things_more_often_than_necessary_def = obsessive_compulsive_inventory___revised_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0005}']">
<#assign i_avoid_throwing_things_away_because_i_am_afraid_i_might_need_them_later_def = obsessive_compulsive_inventory___revised_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0016}']">
<#assign i_get_upset_if_objects_are_not_arranged_properly_def = obsessive_compulsive_inventory___revised_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0006}']">
<#assign i_repeatedly_check_gas_and_water_taps_and_light_switches_after_turning_them_off_def = obsessive_compulsive_inventory___revised_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0017}']">
<#assign i_feel_compelled_to_count_while_i_am_doing_things_def = obsessive_compulsive_inventory___revised_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0007}']">
<#assign i_need_things_to_be_arranged_in_a_particular_way_def = obsessive_compulsive_inventory___revised_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0018}']">
<#assign total_oci_r_score_def = obsessive_compulsive_inventory___revised_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0112}']">
<#assign i_wash_my_hands_more_often_and_longer_than_necessary_def = obsessive_compulsive_inventory___revised_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0020}']">
<#assign i_collect_things_i_don_t_need_def = obsessive_compulsive_inventory___revised_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0010}']">
<#assign i_frequently_get_nasty_thoughts_and_have_difficulty_in_getting_rid_of_them_def = obsessive_compulsive_inventory___revised_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0021}']">
<#assign i_find_it_difficult_to_touch_an_object_when_i_know_it_has_been_touched_by_strangers_or_certain_people_cds_data = obsessive_compulsive_inventory___revised_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0008}']">
<#assign i_feel_that_there_are_good_and_bad_numbers_cds_data = obsessive_compulsive_inventory___revised_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0019}']">
<#assign i_find_it_difficult_to_control_my_own_thoughts_cds_data = obsessive_compulsive_inventory___revised_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0009}']">
<#assign event_time_cds_data = obsessive_compulsive_inventory___revised_entry_cds_data + "[0].elements['/data/events/time']">
<#assign i_repeatedly_check_doors__windows__drawers__etc_cds_data = obsessive_compulsive_inventory___revised_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0011}']">
<#assign i_get_upset_if_others_change_the_way_i_have_arranged_things_cds_data = obsessive_compulsive_inventory___revised_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0012}']">
<#assign i_feel_i_have_to_repeat_certain_numbers_cds_data = obsessive_compulsive_inventory___revised_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0013}']">
<#assign i_sometimes_have_to_wash_or_clean_myself_simply_because_i_feel_contaminated_cds_data = obsessive_compulsive_inventory___revised_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0014}']">
<#assign i_have_saved_up_so_many_things_that_they_get_in_the_way_cds_data = obsessive_compulsive_inventory___revised_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0004}']">
<#assign i_am_upset_by_unpleasant_thoughts_that_come_into_my_mind_against_my_will_cds_data = obsessive_compulsive_inventory___revised_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0015}']">
<#assign i_check_things_more_often_than_necessary_cds_data = obsessive_compulsive_inventory___revised_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0005}']">
<#assign i_avoid_throwing_things_away_because_i_am_afraid_i_might_need_them_later_cds_data = obsessive_compulsive_inventory___revised_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0016}']">
<#assign i_get_upset_if_objects_are_not_arranged_properly_cds_data = obsessive_compulsive_inventory___revised_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0006}']">
<#assign i_repeatedly_check_gas_and_water_taps_and_light_switches_after_turning_them_off_cds_data = obsessive_compulsive_inventory___revised_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0017}']">
<#assign i_feel_compelled_to_count_while_i_am_doing_things_cds_data = obsessive_compulsive_inventory___revised_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0007}']">
<#assign i_need_things_to_be_arranged_in_a_particular_way_cds_data = obsessive_compulsive_inventory___revised_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0018}']">
<#assign total_oci_r_score_cds_data = obsessive_compulsive_inventory___revised_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0112}']">
<#assign i_wash_my_hands_more_often_and_longer_than_necessary_cds_data = obsessive_compulsive_inventory___revised_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0020}']">
<#assign i_collect_things_i_don_t_need_cds_data = obsessive_compulsive_inventory___revised_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0010}']">
<#assign i_frequently_get_nasty_thoughts_and_have_difficulty_in_getting_rid_of_them_cds_data = obsessive_compulsive_inventory___revised_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0021}']">
<#assign i_find_it_difficult_to_touch_an_object_when_i_know_it_has_been_touched_by_strangers_or_certain_people_ehr_data = obsessive_compulsive_inventory___revised_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0008}']">
<#assign i_feel_that_there_are_good_and_bad_numbers_ehr_data = obsessive_compulsive_inventory___revised_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0019}']">
<#assign i_find_it_difficult_to_control_my_own_thoughts_ehr_data = obsessive_compulsive_inventory___revised_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0009}']">
<#assign event_time_ehr_data = obsessive_compulsive_inventory___revised_entry_ehr_data + "[0].elements['/data/events/time']">
<#assign i_repeatedly_check_doors__windows__drawers__etc_ehr_data = obsessive_compulsive_inventory___revised_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0011}']">
<#assign i_get_upset_if_others_change_the_way_i_have_arranged_things_ehr_data = obsessive_compulsive_inventory___revised_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0012}']">
<#assign i_feel_i_have_to_repeat_certain_numbers_ehr_data = obsessive_compulsive_inventory___revised_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0013}']">
<#assign i_sometimes_have_to_wash_or_clean_myself_simply_because_i_feel_contaminated_ehr_data = obsessive_compulsive_inventory___revised_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0014}']">
<#assign i_have_saved_up_so_many_things_that_they_get_in_the_way_ehr_data = obsessive_compulsive_inventory___revised_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0004}']">
<#assign i_am_upset_by_unpleasant_thoughts_that_come_into_my_mind_against_my_will_ehr_data = obsessive_compulsive_inventory___revised_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0015}']">
<#assign i_check_things_more_often_than_necessary_ehr_data = obsessive_compulsive_inventory___revised_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0005}']">
<#assign i_avoid_throwing_things_away_because_i_am_afraid_i_might_need_them_later_ehr_data = obsessive_compulsive_inventory___revised_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0016}']">
<#assign i_get_upset_if_objects_are_not_arranged_properly_ehr_data = obsessive_compulsive_inventory___revised_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0006}']">
<#assign i_repeatedly_check_gas_and_water_taps_and_light_switches_after_turning_them_off_ehr_data = obsessive_compulsive_inventory___revised_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0017}']">
<#assign i_feel_compelled_to_count_while_i_am_doing_things_ehr_data = obsessive_compulsive_inventory___revised_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0007}']">
<#assign i_need_things_to_be_arranged_in_a_particular_way_ehr_data = obsessive_compulsive_inventory___revised_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0018}']">
<#assign total_oci_r_score_ehr_data = obsessive_compulsive_inventory___revised_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0112}']">
<#assign i_wash_my_hands_more_often_and_longer_than_necessary_ehr_data = obsessive_compulsive_inventory___revised_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0020}']">
<#assign i_collect_things_i_don_t_need_ehr_data = obsessive_compulsive_inventory___revised_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0010}']">
<#assign i_frequently_get_nasty_thoughts_and_have_difficulty_in_getting_rid_of_them_ehr_data = obsessive_compulsive_inventory___revised_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0021}']">
<#assign obsessive_compulsive_inventory___revised_entry1_cds_data = "data.cds['openEHR-EHR-EVALUATION.obsessive_compulsive_inventory_revised.v1']">
<#assign obsessive_compulsive_inventory___revised_entry1_def = "def.entries['openEHR-EHR-EVALUATION.obsessive_compulsive_inventory_revised.v1']">
<#assign oci_r_assessment_def = obsessive_compulsive_inventory___revised_entry1_def + ".elements['/data{at0001}/items{at0002}']">
<#assign oci_r_assessment_cds_data = obsessive_compulsive_inventory___revised_entry1_cds_data + "[0].elements['/data{at0001}/items{at0002}']">

<script> 
angular.module('cds_app').controller('OCI-R_Ctrl', function($scope, $window){
  $scope.$on('json_loaded', function(){
    $scope.${event_time_ehr_data}.value.value = new Date().toISOString();
    $scope.${i_find_it_difficult_to_touch_an_object_when_i_know_it_has_been_touched_by_strangers_or_certain_people_ehr_data}.value.selection = $scope.findMin($scope.${i_find_it_difficult_to_touch_an_object_when_i_know_it_has_been_touched_by_strangers_or_certain_people_def});
	$scope.${i_find_it_difficult_to_control_my_own_thoughts_ehr_data}.value.selection = $scope.findMin($scope.${i_find_it_difficult_to_control_my_own_thoughts_def});
	$scope.${i_need_things_to_be_arranged_in_a_particular_way_ehr_data}.value.selection = $scope.findMin($scope.${i_need_things_to_be_arranged_in_a_particular_way_def});
	$scope.${i_avoid_throwing_things_away_because_i_am_afraid_i_might_need_them_later_ehr_data}.value.selection = $scope.findMin($scope.${i_avoid_throwing_things_away_because_i_am_afraid_i_might_need_them_later_def});
	$scope.${i_repeatedly_check_gas_and_water_taps_and_light_switches_after_turning_them_off_ehr_data}.value.selection = $scope.findMin($scope.${i_repeatedly_check_gas_and_water_taps_and_light_switches_after_turning_them_off_def});
	$scope.${i_sometimes_have_to_wash_or_clean_myself_simply_because_i_feel_contaminated_ehr_data}.value.selection = $scope.findMin($scope.${i_sometimes_have_to_wash_or_clean_myself_simply_because_i_feel_contaminated_def});
	$scope.${i_am_upset_by_unpleasant_thoughts_that_come_into_my_mind_against_my_will_ehr_data}.value.selection = $scope.findMin($scope.${i_am_upset_by_unpleasant_thoughts_that_come_into_my_mind_against_my_will_def});
	$scope.${i_repeatedly_check_doors__windows__drawers__etc_ehr_data}.value.selection = $scope.findMin($scope.${i_repeatedly_check_doors__windows__drawers__etc_def});
	$scope.${i_have_saved_up_so_many_things_that_they_get_in_the_way_ehr_data}.value.selection = $scope.findMin($scope.${i_have_saved_up_so_many_things_that_they_get_in_the_way_def});
	$scope.${i_check_things_more_often_than_necessary_ehr_data}.value.selection = $scope.findMin($scope.${i_check_things_more_often_than_necessary_def});
	$scope.${i_feel_i_have_to_repeat_certain_numbers_ehr_data}.value.selection = $scope.findMin($scope.${i_feel_i_have_to_repeat_certain_numbers_def});
	$scope.${i_get_upset_if_others_change_the_way_i_have_arranged_things_ehr_data}.value.selection = $scope.findMin($scope.${i_get_upset_if_others_change_the_way_i_have_arranged_things_def});
	$scope.${i_wash_my_hands_more_often_and_longer_than_necessary_ehr_data}.value.selection = $scope.findMin($scope.${i_wash_my_hands_more_often_and_longer_than_necessary_def});
	$scope.${i_frequently_get_nasty_thoughts_and_have_difficulty_in_getting_rid_of_them_ehr_data}.value.selection = $scope.findMin($scope.${i_frequently_get_nasty_thoughts_and_have_difficulty_in_getting_rid_of_them_def});
	$scope.${i_feel_that_there_are_good_and_bad_numbers_ehr_data}.value.selection = $scope.findMin($scope.${i_feel_that_there_are_good_and_bad_numbers_def});
	$scope.${i_collect_things_i_don_t_need_ehr_data}.value.selection = $scope.findMin($scope.${i_collect_things_i_don_t_need_def});
	$scope.${i_feel_compelled_to_count_while_i_am_doing_things_ehr_data}.value.selection = $scope.findMin($scope.${i_feel_compelled_to_count_while_i_am_doing_things_def});
	$scope.${i_get_upset_if_objects_are_not_arranged_properly_ehr_data}.value.selection = $scope.findMin($scope.${i_get_upset_if_objects_are_not_arranged_properly_def});
  });
});
</script>

<div ng-show="ready" ng-controller="OCI-R_Ctrl">
<div class="header">
  <h1>{{def.concept.name}}</h1>
  <h2>{{def.concept.description}}</h2>
  <div class="help-tip">
	<p>{{${app_help_tag}.description}}</p>
  </div>
</div>
<div class="card">
  <div class="row collapse" title="{{${i_find_it_difficult_to_touch_an_object_when_i_know_it_has_been_touched_by_strangers_or_certain_people_def}.description}}">
    <div class="medium-7 columns">
      <label>{{${i_find_it_difficult_to_touch_an_object_when_i_know_it_has_been_touched_by_strangers_or_certain_people_def}.name}}</label>
      </div>
      <label class="medium-5 columns">
        <select ng-model="${i_find_it_difficult_to_touch_an_object_when_i_know_it_has_been_touched_by_strangers_or_certain_people_ehr_data}.value.selection" ng-options="key as (key.charAt(0) + ' - ' + desc) for (key, desc) in ${i_find_it_difficult_to_touch_an_object_when_i_know_it_has_been_touched_by_strangers_or_certain_people_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }">
        </select>
      </label>
    </div>
	<div class="row collapse" title="{{${i_find_it_difficult_to_control_my_own_thoughts_def}.description}}">
    <div class="medium-7 columns">
      <label>{{${i_find_it_difficult_to_control_my_own_thoughts_def}.name}}</label>
      </div>
      <label class="medium-5 columns">
        <select ng-model="${i_find_it_difficult_to_control_my_own_thoughts_ehr_data}.value.selection" ng-options="key as (key.charAt(0) + ' - ' + desc) for (key, desc) in ${i_find_it_difficult_to_control_my_own_thoughts_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }">
        </select>
      </label>
    </div>
	<div class="row collapse" title="{{${i_need_things_to_be_arranged_in_a_particular_way_def}.description}}">
    <div class="medium-7 columns">
      <label>{{${i_need_things_to_be_arranged_in_a_particular_way_def}.name}}</label>
      </div>
      <label class="medium-5 columns">
        <select ng-model="${i_need_things_to_be_arranged_in_a_particular_way_ehr_data}.value.selection" ng-options="key as (key.charAt(0) + ' - ' + desc) for (key, desc) in ${i_need_things_to_be_arranged_in_a_particular_way_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }">
        </select>
      </label>
    </div>
	<div class="row collapse" title="{{${i_avoid_throwing_things_away_because_i_am_afraid_i_might_need_them_later_def}.description}}">
    <div class="medium-7 columns">
      <label>{{${i_avoid_throwing_things_away_because_i_am_afraid_i_might_need_them_later_def}.name}}</label>
      </div>
      <label class="medium-5 columns">
        <select ng-model="${i_avoid_throwing_things_away_because_i_am_afraid_i_might_need_them_later_ehr_data}.value.selection" ng-options="key as (key.charAt(0) + ' - ' + desc) for (key, desc) in ${i_avoid_throwing_things_away_because_i_am_afraid_i_might_need_them_later_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }">
        </select>
      </label>
    </div>
	<div class="row collapse" title="{{${i_repeatedly_check_gas_and_water_taps_and_light_switches_after_turning_them_off_def}.description}}">
    <div class="medium-7 columns">
      <label>{{${i_repeatedly_check_gas_and_water_taps_and_light_switches_after_turning_them_off_def}.name}}</label>
      </div>
      <label class="medium-5 columns">
        <select ng-model="${i_repeatedly_check_gas_and_water_taps_and_light_switches_after_turning_them_off_ehr_data}.value.selection" ng-options="key as (key.charAt(0) + ' - ' + desc) for (key, desc) in ${i_repeatedly_check_gas_and_water_taps_and_light_switches_after_turning_them_off_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }">
        </select>
      </label>
    </div>
	<div class="row collapse" title="{{${i_sometimes_have_to_wash_or_clean_myself_simply_because_i_feel_contaminated_def}.description}}">
    <div class="medium-7 columns">
      <label>{{${i_sometimes_have_to_wash_or_clean_myself_simply_because_i_feel_contaminated_def}.name}}</label>
      </div>
      <label class="medium-5 columns">
        <select ng-model="${i_sometimes_have_to_wash_or_clean_myself_simply_because_i_feel_contaminated_ehr_data}.value.selection" ng-options="key as (key.charAt(0) + ' - ' + desc) for (key, desc) in ${i_sometimes_have_to_wash_or_clean_myself_simply_because_i_feel_contaminated_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }">
        </select>
      </label>
    </div>
	<div class="row collapse" title="{{${i_am_upset_by_unpleasant_thoughts_that_come_into_my_mind_against_my_will_def}.description}}">
    <div class="medium-7 columns">
      <label>{{${i_am_upset_by_unpleasant_thoughts_that_come_into_my_mind_against_my_will_def}.name}}</label>
      </div>
      <label class="medium-5 columns">
        <select ng-model="${i_am_upset_by_unpleasant_thoughts_that_come_into_my_mind_against_my_will_ehr_data}.value.selection" ng-options="key as (key.charAt(0) + ' - ' + desc) for (key, desc) in ${i_am_upset_by_unpleasant_thoughts_that_come_into_my_mind_against_my_will_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }">
        </select>
      </label>
    </div>
	<div class="row collapse" title="{{${i_repeatedly_check_doors__windows__drawers__etc_def}.description}}">
    <div class="medium-7 columns">
      <label>{{${i_repeatedly_check_doors__windows__drawers__etc_def}.name}}</label>
      </div>
      <label class="medium-5 columns">
        <select ng-model="${i_repeatedly_check_doors__windows__drawers__etc_ehr_data}.value.selection" ng-options="key as (key.charAt(0) + ' - ' + desc) for (key, desc) in ${i_repeatedly_check_doors__windows__drawers__etc_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }">
        </select>
      </label>
    </div>
	<div class="row collapse" title="{{${i_have_saved_up_so_many_things_that_they_get_in_the_way_def}.description}}">
    <div class="medium-7 columns">
      <label>{{${i_have_saved_up_so_many_things_that_they_get_in_the_way_def}.name}}</label>
      </div>
      <label class="medium-5 columns">
        <select ng-model="${i_have_saved_up_so_many_things_that_they_get_in_the_way_ehr_data}.value.selection" ng-options="key as (key.charAt(0) + ' - ' + desc) for (key, desc) in ${i_have_saved_up_so_many_things_that_they_get_in_the_way_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }">
        </select>
      </label>
    </div>
	<div class="row collapse" title="{{${i_check_things_more_often_than_necessary_def}.description}}">
    <div class="medium-7 columns">
      <label>{{${i_check_things_more_often_than_necessary_def}.name}}</label>
      </div>
      <label class="medium-5 columns">
        <select ng-model="${i_check_things_more_often_than_necessary_ehr_data}.value.selection" ng-options="key as (key.charAt(0) + ' - ' + desc) for (key, desc) in ${i_check_things_more_often_than_necessary_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }">
        </select>
      </label>
    </div>
	<div class="row collapse" title="{{${i_feel_i_have_to_repeat_certain_numbers_def}.description}}">
    <div class="medium-7 columns">
      <label>{{${i_feel_i_have_to_repeat_certain_numbers_def}.name}}</label>
      </div>
      <label class="medium-5 columns">
        <select ng-model="${i_feel_i_have_to_repeat_certain_numbers_ehr_data}.value.selection" ng-options="key as (key.charAt(0) + ' - ' + desc) for (key, desc) in ${i_feel_i_have_to_repeat_certain_numbers_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }">
        </select>
      </label>
    </div>
	<div class="row collapse" title="{{${i_get_upset_if_others_change_the_way_i_have_arranged_things_def}.description}}">
    <div class="medium-7 columns">
      <label>{{${i_get_upset_if_others_change_the_way_i_have_arranged_things_def}.name}}</label>
      </div>
      <label class="medium-5 columns">
        <select ng-model="${i_get_upset_if_others_change_the_way_i_have_arranged_things_ehr_data}.value.selection" ng-options="key as (key.charAt(0) + ' - ' + desc) for (key, desc) in ${i_get_upset_if_others_change_the_way_i_have_arranged_things_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }">
        </select>
      </label>
    </div>
	<div class="row collapse" title="{{${i_wash_my_hands_more_often_and_longer_than_necessary_def}.description}}">
    <div class="medium-7 columns">
      <label>{{${i_wash_my_hands_more_often_and_longer_than_necessary_def}.name}}</label>
      </div>
      <label class="medium-5 columns">
        <select ng-model="${i_wash_my_hands_more_often_and_longer_than_necessary_ehr_data}.value.selection" ng-options="key as (key.charAt(0) + ' - ' + desc) for (key, desc) in ${i_wash_my_hands_more_often_and_longer_than_necessary_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }">
        </select>
      </label>
    </div>
	<div class="row collapse" title="{{${i_frequently_get_nasty_thoughts_and_have_difficulty_in_getting_rid_of_them_def}.description}}">
    <div class="medium-7 columns">
      <label>{{${i_frequently_get_nasty_thoughts_and_have_difficulty_in_getting_rid_of_them_def}.name}}</label>
      </div>
      <label class="medium-5 columns">
        <select ng-model="${i_frequently_get_nasty_thoughts_and_have_difficulty_in_getting_rid_of_them_ehr_data}.value.selection" ng-options="key as (key.charAt(0) + ' - ' + desc) for (key, desc) in ${i_frequently_get_nasty_thoughts_and_have_difficulty_in_getting_rid_of_them_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }">
        </select>
      </label>
    </div>
	<div class="row collapse" title="{{${i_feel_that_there_are_good_and_bad_numbers_def}.description}}">
    <div class="medium-7 columns">
      <label>{{${i_feel_that_there_are_good_and_bad_numbers_def}.name}}</label>
      </div>
      <label class="medium-5 columns">
        <select ng-model="${i_feel_that_there_are_good_and_bad_numbers_ehr_data}.value.selection" ng-options="key as (key.charAt(0) + ' - ' + desc) for (key, desc) in ${i_feel_that_there_are_good_and_bad_numbers_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }">
        </select>
      </label>
    </div>
	<div class="row collapse" title="{{${i_collect_things_i_don_t_need_def}.description}}">
    <div class="medium-7 columns">
      <label>{{${i_collect_things_i_don_t_need_def}.name}}</label>
      </div>
      <label class="medium-5 columns">
        <select ng-model="${i_collect_things_i_don_t_need_ehr_data}.value.selection" ng-options="key as (key.charAt(0) + ' - ' + desc) for (key, desc) in ${i_collect_things_i_don_t_need_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }">
        </select>
      </label>
    </div>
	<div class="row collapse" title="{{${i_feel_compelled_to_count_while_i_am_doing_things_def}.description}}">
    <div class="medium-7 columns">
      <label>{{${i_feel_compelled_to_count_while_i_am_doing_things_def}.name}}</label>
      </div>
      <label class="medium-5 columns">
        <select ng-model="${i_feel_compelled_to_count_while_i_am_doing_things_ehr_data}.value.selection" ng-options="key as (key.charAt(0) + ' - ' + desc) for (key, desc) in ${i_feel_compelled_to_count_while_i_am_doing_things_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }">
        </select>
      </label>
    </div>
	<div class="row collapse" title="{{${i_get_upset_if_objects_are_not_arranged_properly_def}.description}}">
    <div class="medium-7 columns">
      <label>{{${i_get_upset_if_objects_are_not_arranged_properly_def}.name}}</label>
      </div>
      <label class="medium-5 columns">
        <select ng-model="${i_get_upset_if_objects_are_not_arranged_properly_ehr_data}.value.selection" ng-options="key as (key.charAt(0) + ' - ' + desc) for (key, desc) in ${i_get_upset_if_objects_are_not_arranged_properly_def}.selections" ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }">
        </select>
      </label>
    </div>
<div class="row collapse" title="{{${total_oci_r_score_def}.description}}" id="displayresult1">
    <div class="medium-7 columns">
      <span><b>{{${total_oci_r_score_def}.name}}:</b></span>
    </div>
    <div class="medium-5 columns">
      <span>{{${total_oci_r_score_cds_data}.value.magnitude}}</span>
    </div>
  </div>
  <div class="row collapse" title="{{${oci_r_assessment_def}.description}}" id="displayresult2">
    <div class="medium-7 columns">
      <span><b>{{${oci_r_assessment_def}.name}}:</b></span>
    </div>
    <div class="medium-5 columns">
      <span>{{${oci_r_assessment_cds_data}.value.value}}</span>
    </div>
  </div>
</div>
</div>

<div class="row"><div class="medium-12 columns"></div></div>
<br /><br />
<div class="row collapse" title="{{${references}.text}}" style="font-size: 85%;">
  <div class="medium-11 medium-offset-1 column">
    <label>{{${references}.text}}:</label>
  </div>
</div>
<div class="references1">
  <div class="row collapse">
      <div class="medium-11 medium-offset-1 column">
        <li>
          <i><a href="https://www.ncbi.nlm.nih.gov/pubmed/12501574">Foa EB, Huppert JD, Leiberg S, Langner R, Kichic R, Hajcak G, Salkovskis PM. The Obsessive-Compulsive Inventory: development and validation of a short version. Psychological assessment. 2002 Dec;14(4):485.</a></i>
        </li>
      </div>
    </div>
	<div class="row collapse">
      <div class="medium-11 medium-offset-1 column">
        <li>
          <i><a href="https://www.researchgate.net/publication/232478139_The_validation_of_a_new_Obsessive-Compulsive_Disorder_Scale_The_Obsessive-Compulsive_Inventory">Foa EB, Kozak MJ, Salkovskis PM, Coles ME, Amir N. The validation of a new obsessive–compulsive disorder scale: The Obsessive–Compulsive Inventory. Psychological Assessment. 1998 Sep;10(3):206.</a></i>
        </li>
      </div>
    </div>
  </div>

<style>
  html, body {
    height:100%;
    width: 100%;
  }
  body {
    font-family: sans-serif;
    font-weight: 300;
    color: #333;
    background: #ecf0f9;
    padding: 1em;
    -webkit-font-smoothing: antialiased;
  }
  h1 {
    font-weight: 600;
    text-align: center;
  }
  h2 {
    text-align: center;
    font-weight: 300;
    font-size: 22px;
    font-style: italic;
  }
  .header {
    margin-bottom: 2em;
  }
  .card {
    background-color: #fdfdfd;
    box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
    margin: 10px auto 0 auto;
    padding: 1em;
    width: 50%;
    overflow: hidden;
  }
  .help-tip{
      position: absolute;
      top: 18px;
      right: 18px;
      text-align: center;
      background-color: #BCDBEA;
      border-radius: 50%;
      width: 24px;
      height: 24px;
      font-size: 14px;
      line-height: 26px;
      cursor: default;
  }
  .help-tip:before{
      content:'?';
      font-weight: bold;
      color:#fff;
  }
  .help-tip:hover p{
      display:block;
      transform-origin: 100% 0%;
      -webkit-animation: fadeIn 0.3s ease-in-out;
      animation: fadeIn 0.3s ease-in-out;
  }
  .help-tip p{	/* The tooltip */
      display: none;
      text-align: left;
      background-color: #1E2021;
      padding: 20px;
      width: 300px;
      position: absolute;
      border-radius: 3px;
      box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.2);
      right: -4px;
      color: #FFF;
      font-size: 13px;
      line-height: 1.4;
      z-index: 9999;
  }
  .help-tip p:before{ /* The pointer of the tooltip */
      position: absolute;
      content: '';
      width:0;
      height: 0;
      border:6px solid transparent;
      border-bottom-color:#1E2021;
      right:10px;
      top:-12px;
  }
  .help-tip p:after{ /* Prevents the tooltip from being hidden */
      width:100%;
      height:40px;
      content:'';
      position: absolute;
      top:-40px;
      left:0;
  }
  .references1{
    font-size: 70%;
  }
  /* CSS animation */
  @-webkit-keyframes fadeIn {
      0% { 
          opacity:0; 
          transform: scale(0.6);
      }

      100% {
          opacity:100%;
          transform: scale(1);
      }
  }
  @keyframes fadeIn {
      0% { opacity:0; }
      100% { opacity:100%; }
  }
  #displayresult1 {
    background-color: #e6e6e6; 
    padding-top: 3px;
    padding-bottom: 3px;
	padding-left: 3px;
    font-size: 90%;
  }
  #displayresult2 {
    background-color: #f2f2f2;
    padding-top: 3px;
    padding-bottom: 3px;
	padding-left: 3px;
    font-size: 90%;
  }
  select, label:not(#h-fix) {
    margin-bottom: 10px;
</style>


</body></html>
