<!DOCTYPE html><html ng-app="cds_app">
<head>
<title>{{def.concept.name}}</title>
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<link rel="stylesheet" type="text/css" href="wro/foundation.css"/>
<link rel="stylesheet" type="text/css" href="wro/date-picker.css"/>
<link rel="stylesheet" type="text/css" href="wro/angular.css"></link>
<script type="text/javascript" src="wro/angular.js"></script>
<link rel="text/javascript" type="text/css" href="wro/foundation.js"/>
<script type="text/javascript" src="wro/moment.js"></script>
<script type="text/javascript" src="wro/date-picker.js"></script>
<script type="text/javascript" src="wro/app_lib.js"></script>
<script id="decision-support-view" type="application/json">{
  "dsViewId": "ABG.v1",
  "language": {
    "originalLanguage": {
      "terminologyId": {
        "name": "ISO_639-1",
        "value": "ISO_639-1"
      },
      "codeString": "en"
    }
  },
  "decisionSupportViewDefinitions": {
    "sv": {
      "name": "Arterial Blood Gas Analyzer",
      "description": "Analys av blodgas"
    },
    "en": {
      "name": "Arterial Blood Gas Analyzer",
      "description": "Calculate the acid/base disturbances"
    }
  },
  "resourceDescription": {
    "originalAuthor": {
      "date": "2016-01-31",
      "name": "Syeeda S Farruque",
      "organisation": "Cambio Healthcare Systems"
    },
    "otherContributors": [
      "Dennis Forslund, Cambio Healthcare Systems"
    ],
    "details": {
      "sv": {
        "purpose": "Instrumentet beräknar anjongap, korrigerat anjongap, metabol rubbning samt, om föreliggande, kompensatorisk reaktion.\n",
        "keywords": [
          "arterial blood gas analyzer",
          "acidos",
          "alkalos",
          "anjongap",
          "pH",
          "blodgas"
        ],
        "use": "Med hjälp av instrumentet bedöms patientens blodgas med avseende på eventuell förekomst av metabol eller respiratorisk acidos eller alkalos samt eventuell kompensatorisk reaktion.\n\n1 - är pH inom normalintervall?\n2 - är  PaCO2 inom normalintervall?\n3 - är HCO3 inom normalintervall?\n4 - information från 1-3 bearbetas\n5 - bedömning av PaCO2 och HCO3 \n\nNormalintervall:\nPH: 7.35-7.45\nPaCO2: 35-45mmHg (4.7-KPa)\nHCO3-: 22-29mmol/l\nNa: 135-145mmol/l\nCl: 95-105mmol/l",
        "misuse": "Ej avsedd att användas isolerat utan endast för att stödja klinisk bedömning.",
        "copyright": "© Cambio Healthcare Systems"
      },
      "en": {
        "purpose": "This tool calculates the AG (Anion gap) the corrected Anion Gap (cAG), the primary acid/base disturbance of blood PH and the compensatory - if any - reaction by utilising the various blood gas/electrolytes values found in a patient\u0027s record.\n\nIncreased Anion gap is measured in the presence of a metabolic acidosis with a corrected gap in the presence of albumin values.",
        "keywords": [
          "arterial blood gas analyzer",
          "acidosis",
          "alkalosis",
          "anion gap"
        ],
        "use": "PH normal range: 7.35-7.45 PH (but with an extreme deviation in either bicarb or PaCO2 if the Ph is between above or below 7.4, even if the value is within this normal range, it will be moving in the direction of the disturbance).\n\nBicarb (HCO3-) normal range: 22-29 mmol/L\nPaCO2: 35-45mmHg\nNa: 135-145mmol/L\nCl: 95-105mmol/L\nAlbumin: 40 g/L\nThe picture is also contextualised in terms of acute or chronic.\n\nTo ascertain whether the picture represents a metabolic or respiratory acidosis or alkalosis, the PH, PaCO2 and bicarbonate are looked at:\n\n1-Is the PH normal?\n2-Is the PaCO2 normal?\n3-Is the HCO3 normal?\n4-Match the direction of difference of the PaCO2 or HCO3 with the PH\n5-Does the PaCO2 or the HCO3 move in the opposite direction to the PH?",
        "misuse": "Do not use in isolation of a thorough clinical evaluation of the patient\u0027s state",
        "copyright": "© Cambio Healthcare Systems"
      }
    },
    "otherDetails": {
      "references": "Ref. 1: Baillie JK. Simple, easily memorised \u0027rules of thumb\u0027 for the rapid assessment of physiological compensation for respiratory acid-base disorders. Thorax 2008;63:289-290 doi:10.1136/thx.2007.091223\n\nRef. 2: Kaufman DA. Interpretation of Arterial Blood Gases (ABGs). Written for Thoracic.org. Retrieved 12/9/2014.\n"
    }
  },
  "alertGuideIds": [],
  "executionGuideIds": [
    "ABG.v1"
  ],
  "alertBindings": {},
  "termDefinitions": {
    "sv": {
      "id": "sv",
      "terms": {
        "vt0001": {
          "id": "vt0001",
          "text": "*(en) References"
        }
      }
    },
    "en": {
      "id": "en",
      "terms": {
        "vt0001": {
          "id": "vt0001",
          "text": "References"
        }
      }
    }
  }
}</script>
</head>
<body ng-controller="cds_controller">
<#assign serum_microalbumin_entry_ehr_data = "data.ehr['openEHR-EHR-OBSERVATION.lab_test-serum_albumin.v1']">
<#assign serum_microalbumin_entry_def = "def.entries['openEHR-EHR-OBSERVATION.lab_test-serum_albumin.v1']">
<#assign serum_albumin_def = serum_microalbumin_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0078.3}']">
<#assign event_time_def = serum_microalbumin_entry_def + ".elements['/data/events/time']">
<#assign serum_albumin_ehr_data = serum_microalbumin_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0078.3}']">
<#assign event_time_ehr_data = serum_microalbumin_entry_ehr_data + "[0].elements['/data/events/time']">
<#assign abg_analyser_entry_cds_data = "data.cds['openEHR-EHR-OBSERVATION.abg_analyser.v1']">
<#assign abg_analyser_entry_ehr_data = "data.ehr['openEHR-EHR-OBSERVATION.abg_analyser.v1']">
<#assign abg_analyser_entry_def = "def.entries['openEHR-EHR-OBSERVATION.abg_analyser.v1']">
<#assign event_time1_def = abg_analyser_entry_def + ".elements['/data/events/time']">
<#assign acute_chronic_def = abg_analyser_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0014}']">
<#assign respiratory_acidosis_def = abg_analyser_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0025}']">
<#assign anion_gap_def = abg_analyser_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0004}']">
<#assign delta_ratio_assessment_def = abg_analyser_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0050}']">
<#assign respiratory_alkalosis_def = abg_analyser_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0026}']">
<#assign metabolic_acidosis_def = abg_analyser_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0027}']">
<#assign corrected_ag_def = abg_analyser_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0017}']">
<#assign ph_acidotic__def = abg_analyser_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0006}']">
<#assign metabolic_alkalosis_def = abg_analyser_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0028}']">
<#assign final_analysis_def = abg_analyser_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0018}']">
<#assign delta_gap_if_ag_present_def = abg_analyser_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0049}']">
<#assign associated_anion_gap__def = abg_analyser_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0045}']">
<#assign event_time1_cds_data = abg_analyser_entry_cds_data + "[0].elements['/data/events/time']">
<#assign acute_chronic_cds_data = abg_analyser_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0014}']">
<#assign respiratory_acidosis_cds_data = abg_analyser_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0025}']">
<#assign anion_gap_cds_data = abg_analyser_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0004}']">
<#assign delta_ratio_assessment_cds_data = abg_analyser_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0050}']">
<#assign respiratory_alkalosis_cds_data = abg_analyser_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0026}']">
<#assign metabolic_acidosis_cds_data = abg_analyser_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0027}']">
<#assign corrected_ag_cds_data = abg_analyser_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0017}']">
<#assign ph_acidotic__cds_data = abg_analyser_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0006}']">
<#assign metabolic_alkalosis_cds_data = abg_analyser_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0028}']">
<#assign final_analysis_cds_data = abg_analyser_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0018}']">
<#assign delta_gap_if_ag_present_cds_data = abg_analyser_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0049}']">
<#assign associated_anion_gap__cds_data = abg_analyser_entry_cds_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0045}']">
<#assign event_time1_ehr_data = abg_analyser_entry_ehr_data + "[0].elements['/data/events/time']">
<#assign acute_chronic_ehr_data = abg_analyser_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0014}']">
<#assign respiratory_acidosis_ehr_data = abg_analyser_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0025}']">
<#assign anion_gap_ehr_data = abg_analyser_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0004}']">
<#assign delta_ratio_assessment_ehr_data = abg_analyser_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0050}']">
<#assign respiratory_alkalosis_ehr_data = abg_analyser_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0026}']">
<#assign metabolic_acidosis_ehr_data = abg_analyser_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0027}']">
<#assign corrected_ag_ehr_data = abg_analyser_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0017}']">
<#assign ph_acidotic__ehr_data = abg_analyser_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0006}']">
<#assign metabolic_alkalosis_ehr_data = abg_analyser_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0028}']">
<#assign final_analysis_ehr_data = abg_analyser_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0018}']">
<#assign delta_gap_if_ag_present_ehr_data = abg_analyser_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0049}']">
<#assign associated_anion_gap__ehr_data = abg_analyser_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0045}']">
<#assign blood_gas_assessment_entry_ehr_data = "data.ehr['openEHR-EHR-OBSERVATION.lab_test-blood_gases.v1']">
<#assign blood_gas_assessment_entry_def = "def.entries['openEHR-EHR-OBSERVATION.lab_test-blood_gases.v1']">
<#assign paco2_def = blood_gas_assessment_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0078.12}']">
<#assign arterial_ph_def = blood_gas_assessment_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0078.10}']">
<#assign event_time2_def = blood_gas_assessment_entry_def + ".elements['/data/events/time']">
<#assign paco2_ehr_data = blood_gas_assessment_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0078.12}']">
<#assign arterial_ph_ehr_data = blood_gas_assessment_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0078.10}']">
<#assign event_time2_ehr_data = blood_gas_assessment_entry_ehr_data + "[0].elements['/data/events/time']">
<#assign urea_and_electrolytes_entry_ehr_data = "data.ehr['openEHR-EHR-OBSERVATION.lab_test-urea_and_electrolytes.v1']">
<#assign urea_and_electrolytes_entry_def = "def.entries['openEHR-EHR-OBSERVATION.lab_test-urea_and_electrolytes.v1']">
<#assign bicarbonate_def = urea_and_electrolytes_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0078.2}']">
<#assign chloride_def = urea_and_electrolytes_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0078.3}']">
<#assign sodium_def = urea_and_electrolytes_entry_def + ".elements['/data{at0001}/events{at0002}/data{at0003}/items{at0078.5}']">
<#assign event_time3_def = urea_and_electrolytes_entry_def + ".elements['/data/events/time']">
<#assign bicarbonate_ehr_data = urea_and_electrolytes_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0078.2}']">
<#assign chloride_ehr_data = urea_and_electrolytes_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0078.3}']">
<#assign sodium_ehr_data = urea_and_electrolytes_entry_ehr_data + "[0].elements['/data{at0001}/events{at0002}/data{at0003}/items{at0078.5}']">
<#assign event_time3_ehr_data = urea_and_electrolytes_entry_ehr_data + "[0].elements['/data/events/time']">
<div ng-show="ready">
<div class="row">
<div class="medium-12 column">
<h1>{{def.concept.name}}</h1>
</div>
</div>
<div class="row">
<div class="medium-6 column">
<form name="form">
<fieldset>
<legend>{{${serum_microalbumin_entry_def}.name}}</legend>
<label>{{${serum_albumin_def}.name}}</label>
<div class="row collapse" title="{{${serum_albumin_def}.description}}">
<div class="medium-9 columns">
<input ng-model="${serum_albumin_ehr_data}.value.magnitude" type="number" step='any' ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }"></input>
</div>
<div class="medium-3 columns">
<select ng-model="${serum_albumin_ehr_data}.value.units" id="serum_albumin_ehr_units" ng-options="unit for unit in ${serum_albumin_def}.units" ng-change="execute()"></select>
</div>
</div>
<label>{{${event_time_def}.name}}</label>
<div class="row collapse" title="{{${event_time_def}.description}}">
<div class="medium-9 columns">
<input ng-model="${event_time_ehr_data}.value.value" type="text"  pikaday="date"  ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }"></input>
</div>
</div>
</fieldset>
<fieldset>
<legend>{{${abg_analyser_entry_def}.name}}</legend>
<label>{{${event_time1_def}.name}}</label>
<div class="row collapse" title="{{${event_time1_def}.description}}">
<div class="medium-9 columns">
<input ng-model="${event_time1_ehr_data}.value.value" type="text"  pikaday="date"  ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }"></input>
</div>
</div>
<label>{{${acute_chronic_def}.name}}</label>
<div class="row collapse" title="{{${acute_chronic_def}.description}}">
<div class="medium-9 columns">
<select ng-model="${acute_chronic_ehr_data}.value.selection" ng-options="key as desc for (key, desc) in ${acute_chronic_def}.selections"  ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }"></select>
</div>
</div>
</fieldset>
<fieldset>
<legend>{{${blood_gas_assessment_entry_def}.name}}</legend>
<label>{{${paco2_def}.name}}</label>
<div class="row collapse" title="{{${paco2_def}.description}}">
<div class="medium-9 columns">
<input ng-model="${paco2_ehr_data}.value.magnitude" type="number" step='any' ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }"></input>
</div>
<div class="medium-3 columns">
<select ng-model="${paco2_ehr_data}.value.units" id="paco2_ehr_units" ng-options="unit for unit in ${paco2_def}.units" ng-change="execute()"></select>
</div>
</div>
<label>{{${arterial_ph_def}.name}}</label>
<div class="row collapse" title="{{${arterial_ph_def}.description}}">
<div class="medium-9 columns">
<input ng-model="${arterial_ph_ehr_data}.value.magnitude" type="number" step='any' ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }"></input>
</div>
<div class="medium-3 columns">
<select ng-model="${arterial_ph_ehr_data}.value.units" id="arterial_ph_ehr_units" ng-options="unit for unit in ${arterial_ph_def}.units" ng-change="execute()"></select>
</div>
</div>
<label>{{${event_time2_def}.name}}</label>
<div class="row collapse" title="{{${event_time2_def}.description}}">
<div class="medium-9 columns">
<input ng-model="${event_time2_ehr_data}.value.value" type="text"  pikaday="date"  ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }"></input>
</div>
</div>
</fieldset>
<fieldset>
<legend>{{${urea_and_electrolytes_entry_def}.name}}</legend>
<label>{{${bicarbonate_def}.name}}</label>
<div class="row collapse" title="{{${bicarbonate_def}.description}}">
<div class="medium-9 columns">
<input ng-model="${bicarbonate_ehr_data}.value.magnitude" type="number" step='any' ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }"></input>
</div>
<div class="medium-3 columns">
<select ng-model="${bicarbonate_ehr_data}.value.units" id="bicarbonate_ehr_units" ng-options="unit for unit in ${bicarbonate_def}.units" ng-change="execute()"></select>
</div>
</div>
<label>{{${chloride_def}.name}}</label>
<div class="row collapse" title="{{${chloride_def}.description}}">
<div class="medium-9 columns">
<input ng-model="${chloride_ehr_data}.value.magnitude" type="number" step='any' ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }"></input>
</div>
<div class="medium-3 columns">
<select ng-model="${chloride_ehr_data}.value.units" id="chloride_ehr_units" ng-options="unit for unit in ${chloride_def}.units" ng-change="execute()"></select>
</div>
</div>
<label>{{${sodium_def}.name}}</label>
<div class="row collapse" title="{{${sodium_def}.description}}">
<div class="medium-9 columns">
<input ng-model="${sodium_ehr_data}.value.magnitude" type="number" step='any' ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }"></input>
</div>
<div class="medium-3 columns">
<select ng-model="${sodium_ehr_data}.value.units" id="sodium_ehr_units" ng-options="unit for unit in ${sodium_def}.units" ng-change="execute()"></select>
</div>
</div>
<label>{{${event_time3_def}.name}}</label>
<div class="row collapse" title="{{${event_time3_def}.description}}">
<div class="medium-9 columns">
<input ng-model="${event_time3_ehr_data}.value.value" type="text"  pikaday="date"  ng-change="execute()" ng-model-options="{ updateOn: 'default blur', debounce: { default: 500, blur: 0 } }"></input>
</div>
</div>
</fieldset>
</form>
</div>
<div class="medium-6 column">
<fieldset>
<legend>{{${abg_analyser_entry_def}.name}}</legend>
<div class="row">
<div class="medium-12 columns">
<b>{{${acute_chronic_def}.name}}: </b>{{${acute_chronic_cds_data}.value.symbol.value}}</div>
</div>
<div class="row">
<div class="medium-12 columns">
<b>{{${respiratory_acidosis_def}.name}}: </b>{{${respiratory_acidosis_cds_data}.value.symbol.value}}</div>
</div>
<div class="row">
<div class="medium-12 columns">
<b>{{${anion_gap_def}.name}}: </b>{{${anion_gap_cds_data}.value.magnitude}} {{${anion_gap_cds_data}.value.units}}</div>
</div>
<div class="row">
<div class="medium-12 columns">
<b>{{${delta_ratio_assessment_def}.name}}: </b>{{${delta_ratio_assessment_cds_data}.value.symbol.value}}</div>
</div>
<div class="row">
<div class="medium-12 columns">
<b>{{${respiratory_alkalosis_def}.name}}: </b>{{${respiratory_alkalosis_cds_data}.value.symbol.value}}</div>
</div>
<div class="row">
<div class="medium-12 columns">
<b>{{${metabolic_acidosis_def}.name}}: </b>{{${metabolic_acidosis_cds_data}.value.symbol.value}}</div>
</div>
<div class="row">
<div class="medium-12 columns">
<b>{{${corrected_ag_def}.name}}: </b>{{${corrected_ag_cds_data}.value.magnitude}} {{${corrected_ag_cds_data}.value.units}}</div>
</div>
<div class="row">
<div class="medium-12 columns">
<b>{{${ph_acidotic__def}.name}}: </b>{{${ph_acidotic__cds_data}.value.symbol.value}}</div>
</div>
<div class="row">
<div class="medium-12 columns">
<b>{{${metabolic_alkalosis_def}.name}}: </b>{{${metabolic_alkalosis_cds_data}.value.symbol.value}}</div>
</div>
<div class="row">
<div class="medium-12 columns">
<b>{{${final_analysis_def}.name}}: </b>{{${final_analysis_cds_data}.value.symbol.value}}</div>
</div>
<div class="row">
<div class="medium-12 columns">
<b>{{${delta_gap_if_ag_present_def}.name}}: </b>{{${delta_gap_if_ag_present_cds_data}.value.magnitude}} {{${delta_gap_if_ag_present_cds_data}.value.units}}</div>
</div>
<div class="row">
<div class="medium-12 columns">
<b>{{${associated_anion_gap__def}.name}}: </b>{{${associated_anion_gap__cds_data}.value.symbol.value}}</div>
</div>
</fieldset>
</div>
</div>
</div>

<style>
  html, body {
    height:100%;
    width: 100%;
  }
  body {
    font-family: sans-serif;
    font-weight: 300;
    color: #333;
    background: #ecf0f9;
    padding: 1em;
    -webkit-font-smoothing: antialiased;
  }
  h1 {
    font-weight: 600;
    text-align: center;
  }
  h2 {
    text-align: center;
    font-weight: 300;
    font-size: 22px;
    font-style: italic;
  }
  .header {
    margin-bottom: 2em;
  }
  .card {
    background-color: #fdfdfd;
    box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
    margin: 10px auto 0 auto;
    padding: 1em;
    width: 50%;
    overflow: hidden;
  }
  .help-tip{
      position: absolute;
      top: 18px;
      right: 18px;
      text-align: center;
      background-color: #BCDBEA;
      border-radius: 50%;
      width: 24px;
      height: 24px;
      font-size: 14px;
      line-height: 26px;
      cursor: default;
  }
  .help-tip:before{
      content:'?';
      font-weight: bold;
      color:#fff;
  }
  .help-tip:hover p{
      display:block;
      transform-origin: 100% 0%;
      -webkit-animation: fadeIn 0.3s ease-in-out;
      animation: fadeIn 0.3s ease-in-out;
  }
  .help-tip p{	/* The tooltip */
      display: none;
      text-align: left;
      background-color: #1E2021;
      padding: 20px;
      width: 300px;
      position: absolute;
      border-radius: 3px;
      box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.2);
      right: -4px;
      color: #FFF;
      font-size: 13px;
      line-height: 1.4;
      z-index: 9999;
  }
  .help-tip p:before{ /* The pointer of the tooltip */
      position: absolute;
      content: '';
      width:0;
      height: 0;
      border:6px solid transparent;
      border-bottom-color:#1E2021;
      right:10px;
      top:-12px;
  }
  .help-tip p:after{ /* Prevents the tooltip from being hidden */
      width:100%;
      height:40px;
      content:'';
      position: absolute;
      top:-40px;
      left:0;
  }
  .references1{
    font-size: 70%;
  }
  /* CSS animation */
  @-webkit-keyframes fadeIn {
      0% { 
          opacity:0; 
          transform: scale(0.6);
      }

      100% {
          opacity:100%;
          transform: scale(1);
      }
  }
  @keyframes fadeIn {
      0% { opacity:0; }
      100% { opacity:100%; }
  }
  #displayresult1 {
    background-color: #e6e6e6; 
    padding-top: 3px;
    padding-bottom: 3px;
	padding-left: 3px;
    font-size: 90%;
  }
  #displayresult2 {
    background-color: #f2f2f2;
    padding-top: 3px;
    padding-bottom: 3px;
	padding-left: 3px;
    font-size: 90%;
  }
  select, label:not(#h-fix) {
    margin-bottom: 10px;
</style>


</body></html>
